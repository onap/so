{
  "comments": [
    {
      "key": {
        "uuid": "9adffdf1_25434f43",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/aai/AaiConnectionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-01-16T13:30:24Z",
      "side": 1,
      "message": "Why do we need this method here?  it would seem easier to just use the .connect in your other class.  It seems unnecessary to me.",
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_855b1bf5",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/aai/AaiConnectionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 2789
      },
      "writtenOn": "2019-01-16T15:23:11Z",
      "side": 1,
      "message": "AaiConnectionImpl is a spring component that can be injected via autowired annotation into CreateRelation component, it is much clear because the important dependency is visible and it is easy for testing, because it can be mocked in easy way. \nAAIResourcesClient is not a bean, so if we use it directly in method of CreateRelation component, it would hidden dependency, what causes difficult testing for example.",
      "parentUuid": "9adffdf1_25434f43",
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_8501db6b",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/aai/AaiConnectionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-01-16T15:34:58Z",
      "side": 1,
      "message": "How does it differ from utilizing InjectionHelper, like the other classes that interact with A\u0026AI client?  It seems to just introduce another path?",
      "parentUuid": "9adffdf1_855b1bf5",
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_d7aa3484",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/aai/AaiConnectionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 2795
      },
      "writtenOn": "2019-01-17T10:19:29Z",
      "side": 1,
      "message": "I just looked at InjectionHelper - unfortunately this solution introduces several issues.\n\n1. If class depends on InjectionHelper it automatically (indirectly) depends on all classes that InjectionHelper provides. That\u0027s one thing that a dependency injection framework should avoid.\n\n2. Problem that is connected to previous one is that a central point of constructing unrelated objects impacts the readability negatively. The class dependencies are not known during its instantiation, but only after looking into all the usages inside.\n\n3. Another problem InjectionHelper has is that it \"Enforces acquisition of a new copy of these classes every time to help with picking up properties files changes, etc\" - that indicates that those classes have logic in constructors, especially reading files. That shouldn\u0027t be the case.\n\nAll those classes - AAIResourcesClient, AAIQueryClient, ... could be beans. Actually there is even a mechanism in spring that allows to update beans when configuration changes. That way you wouldn\u0027t need to read configuration files every time you want to send a rest message.",
      "parentUuid": "9adffdf1_8501db6b",
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_3aa285fd",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/aai/AaiConnectionImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-01-17T13:35:22Z",
      "side": 1,
      "message": "We specifically decided to not use spring so other projects could re-use the aai client.",
      "parentUuid": "9adffdf1_d7aa3484",
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_4ada20e9",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelation.java",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 2795
      },
      "writtenOn": "2019-01-16T13:44:21Z",
      "side": 1,
      "message": "Because this is only your code change copyrights to just nokia.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_2574af66",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/main/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelation.java",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 2789
      },
      "writtenOn": "2019-01-16T15:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_4ada20e9",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_c5892376",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 2795
      },
      "writtenOn": "2019-01-16T13:44:21Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_4571b374",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 2789
      },
      "writtenOn": "2019-01-16T15:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_c5892376",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_657ab778",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 2795
      },
      "writtenOn": "2019-01-16T13:44:21Z",
      "side": 1,
      "message": "double semicolon",
      "range": {
        "startLine": 69,
        "startChar": 90,
        "endLine": 69,
        "endChar": 92
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_05672bb8",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 2789
      },
      "writtenOn": "2019-01-16T15:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_657ab778",
      "range": {
        "startLine": 69,
        "startChar": 90,
        "endLine": 69,
        "endChar": 92
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_25982fbf",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 2795
      },
      "writtenOn": "2019-01-16T13:44:21Z",
      "side": 1,
      "message": "add spaces between + and strings to improve readability",
      "range": {
        "startLine": 70,
        "startChar": 82,
        "endLine": 70,
        "endChar": 83
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_a5073fc9",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/delegate/CreateRelationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 2789
      },
      "writtenOn": "2019-01-16T15:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_25982fbf",
      "range": {
        "startLine": 70,
        "startChar": 82,
        "endLine": 70,
        "endChar": 83
      },
      "revId": "0c3dd6e321e0ccc5dd4548f621a80b50869242d5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}