{
  "comments": [
    {
      "key": {
        "uuid": "0798be9e_906504a7",
        "filename": "bpmn/MSOCommonBPMN/src/test/java/org/onap/so/bpmn/servicedecomposition/ExtractPojosForBBTest.java",
        "patchSetId": 6
      },
      "lineNbr": 155,
      "author": {
        "id": 2837
      },
      "writtenOn": "2020-01-16T09:01:10Z",
      "side": 1,
      "message": "For REFACTOR purposes (future): This test should be splitted to N separate ones.",
      "range": {
        "startLine": 60,
        "startChar": 1,
        "endLine": 155,
        "endChar": 5
      },
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c599c1e7_a2ccdecc",
        "filename": "bpmn/MSOCommonBPMN/src/test/java/org/onap/so/bpmn/servicedecomposition/ExtractPojosForBBTest.java",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 2837
      },
      "writtenOn": "2020-01-16T09:01:10Z",
      "side": 1,
      "message": "For future:\nI would try to use assertJ assertions since they are available and more flexible.\nThis test could look like:\n```\n    private void assertExceptionTest_WhenServiceEmpty(ResourceKey key) {\n        // given\n        setCustomerWithEmptyServiceInstance();\n        String value \u003d execution.getLookupMap().get(key);\n        // when\n        Throwable thrown \u003d catchThrowable(() -\u003e extractPojos.extractByKey(execution, key));\n        // then\n        assertThat(thrown).isInstanceOf(BBObjectNotFoundException.class)\n                .hasMessage(\"BBObject\" + key + \" was not found in gBBInput using reference value: \" + value);\n    }\n```",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 213,
        "endChar": 50
      },
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e1d32a_8906fe97",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/tasks/CheckAaiForPnfCorrelationIdTest.java",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 2837
      },
      "writtenOn": "2020-01-16T12:04:20Z",
      "side": 1,
      "message": "then before verify",
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e64bf5f_b0e20532",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/tasks/CheckAaiForPnfCorrelationIdTest.java",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 2837
      },
      "writtenOn": "2020-01-16T12:04:20Z",
      "side": 1,
      "message": "then before verify",
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52903858_668fb665",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/tasks/CreatePnfEntryInAaiTest.java",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 2837
      },
      "writtenOn": "2020-01-16T12:04:20Z",
      "side": 1,
      "message": "This line should be moved to when.",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 82
      },
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f950bea2_8099b62a",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/tasks/CreatePnfEntryInAaiTest.java",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 2789
      },
      "writtenOn": "2020-01-16T17:11:41Z",
      "side": 1,
      "message": "No, it should not. The method \"execute\" is a tested method. The object createdEntry is taken from map \"created\", that was implemented for test to hold created Pnfs. In other words, the pnf is put to the \"created\" map after successful invoking of method \"execute\".",
      "parentUuid": "52903858_668fb665",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 82
      },
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "335ee021_c9027436",
        "filename": "bpmn/so-bpmn-infrastructure-common/src/test/java/org/onap/so/bpmn/infrastructure/pnf/tasks/CreatePnfEntryInAaiTest.java",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 2837
      },
      "writtenOn": "2020-01-17T08:12:38Z",
      "side": 1,
      "message": "OK, you are right. Thanks for clarifications.",
      "parentUuid": "f950bea2_8099b62a",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 82
      },
      "revId": "5ec955ce08cd3101eed327bbb6d1ceb3903f5bfc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}