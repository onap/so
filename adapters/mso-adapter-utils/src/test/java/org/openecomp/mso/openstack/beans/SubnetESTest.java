/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:52:14 GMT 2016
 */

package org.openecomp.mso.openstack.beans;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SubnetESTest extends SubnetESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setSubnetName("lu[c8x");
      subnet0.getSubnetName();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setSubnetName("");
      subnet0.getSubnetName();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setSubnetId("nL");
      subnet0.getSubnetId();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setSubnetId("");
      subnet0.getSubnetId();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setNeutronId("`jC)vXXeOG");
      subnet0.getNeutronId();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setIpVersion("");
      String string0 = subnet0.getIpVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setGatewayIp((String) null);
      subnet0.getGatewayIp();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setGatewayIp("Subnet [subnetName=null, neutronId=null, subnetId=null, cidr=null, gatewayIp=, ipVersion=4, enableDHCP=false, hostRoutes=null, allocationPools=null, dnsNameServers=null]");
      subnet0.getGatewayIp();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setCidr("H3%q_*bOC2");
      subnet0.getCidr();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setIpVersion((String) null);
      String string0 = subnet0.getIpVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setAllocationPools((List<Pool>) null);
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getNeutronId();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getHostRoutes();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      String string0 = subnet0.toString();
      assertEquals("Subnet [subnetName=null, neutronId=null, subnetId=null, cidr=null, gatewayIp=, ipVersion=4, enableDHCP=false, hostRoutes=null, allocationPools=null, dnsNameServers=null]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getSubnetName();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setNeutronId("");
      subnet0.getNeutronId();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setCidr("");
      subnet0.getCidr();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getDnsNameServers();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setHostRoutes((List<String>) null);
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      String string0 = subnet0.getIpVersion();
      assertEquals("4", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getSubnetId();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setEnableDHCP((Boolean) null);
      subnet0.getEnableDHCP();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getAllocationPools();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getCidr();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.getGatewayIp();
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      subnet0.setDnsNameServers((List<String>) null);
      assertEquals("4", subnet0.getIpVersion());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Subnet subnet0 = new Subnet();
      Boolean boolean0 = subnet0.getEnableDHCP();
      assertFalse(boolean0);
      assertEquals("4", subnet0.getIpVersion());
  }
}
