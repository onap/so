/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:45:54 GMT 2016
 */

package org.openecomp.mso.openstack.utils;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class MsoHeatEnvironmentResourceESTest extends MsoHeatEnvironmentResourceESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("", "");
      msoHeatEnvironmentResource0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("8{,8]8v", "8{,8]8v");
      String string0 = msoHeatEnvironmentResource0.getValue();
      assertEquals("8{,8]8v", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("", "");
      String string0 = msoHeatEnvironmentResource0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("\"(_{*)._$D2+w8wk");
      String string0 = msoHeatEnvironmentResource0.getName();
      assertEquals("\"(_{*)._$D2+w8wk", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      MsoHeatEnvironmentResource msoHeatEnvironmentResource1 = new MsoHeatEnvironmentResource();
      // Undeclared exception!
      try { 
        msoHeatEnvironmentResource0.equals(msoHeatEnvironmentResource1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("", "");
      MsoHeatEnvironmentResource msoHeatEnvironmentResource1 = new MsoHeatEnvironmentResource("", "");
      boolean boolean0 = msoHeatEnvironmentResource0.equals(msoHeatEnvironmentResource1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("m");
      MsoHeatEnvironmentResource msoHeatEnvironmentResource1 = new MsoHeatEnvironmentResource("l", "l");
      boolean boolean0 = msoHeatEnvironmentResource0.equals(msoHeatEnvironmentResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      boolean boolean0 = msoHeatEnvironmentResource0.equals("1Z^#74OJV(OBf<=#r");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      boolean boolean0 = msoHeatEnvironmentResource0.equals(msoHeatEnvironmentResource0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      String string0 = msoHeatEnvironmentResource0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      msoHeatEnvironmentResource0.setName("");
      String string0 = msoHeatEnvironmentResource0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource("");
      String string0 = msoHeatEnvironmentResource0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      msoHeatEnvironmentResource0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      String string0 = msoHeatEnvironmentResource0.toString();
      assertEquals("\"null\": null", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MsoHeatEnvironmentResource msoHeatEnvironmentResource0 = new MsoHeatEnvironmentResource();
      msoHeatEnvironmentResource0.setValue("");
      assertNull(msoHeatEnvironmentResource0.getName());
  }
}
