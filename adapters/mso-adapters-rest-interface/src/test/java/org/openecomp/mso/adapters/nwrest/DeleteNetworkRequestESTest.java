/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:26:39 GMT 2016
 */

package org.openecomp.mso.adapters.nwrest;

import org.junit.Test;
import static org.junit.Assert.*;

import org.openecomp.mso.entity.MsoRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class DeleteNetworkRequestESTest extends DeleteNetworkRequestESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setTenantId("jaxb.formatted.output");
      String string0 = deleteNetworkRequest0.getTenantId();
      assertEquals("jaxb.formatted.output", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setNetworkType("v6GIJ");
      String string0 = deleteNetworkRequest0.getNetworkType();
      assertEquals("v6GIJ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setNetworkType("");
      String string0 = deleteNetworkRequest0.getNetworkType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setNetworkStackId(":E:r|{0%c~Z5LYz0S8");
      String string0 = deleteNetworkRequest0.getNetworkStackId();
      assertEquals(":E:r|{0%c~Z5LYz0S8", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setNetworkStackId("");
      String string0 = deleteNetworkRequest0.getNetworkStackId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setNetworkId("jaxb.formatted.output");
      String string0 = deleteNetworkRequest0.getNetworkId();
      assertEquals("jaxb.formatted.output", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setMsoRequest((MsoRequest) null);
      MsoRequest msoRequest0 = deleteNetworkRequest0.getMsoRequest();
      assertNull(msoRequest0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setCloudSiteId("");
      String string0 = deleteNetworkRequest0.getCloudSiteId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      String string0 = deleteNetworkRequest0.getNetworkStackId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      String string0 = deleteNetworkRequest0.getNetworkType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setNetworkId("");
      String string0 = deleteNetworkRequest0.getNetworkId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      String string0 = deleteNetworkRequest0.getCloudSiteId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setTenantId("");
      String string0 = deleteNetworkRequest0.getTenantId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      String string0 = deleteNetworkRequest0.getNetworkId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      String string0 = deleteNetworkRequest0.getTenantId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      deleteNetworkRequest0.setCloudSiteId("'+#+m");
      String string0 = deleteNetworkRequest0.getCloudSiteId();
      assertEquals("'+#+m", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeleteNetworkRequest deleteNetworkRequest0 = new DeleteNetworkRequest();
      MsoRequest msoRequest0 = deleteNetworkRequest0.getMsoRequest();
      deleteNetworkRequest0.setMsoRequest(msoRequest0);
      assertTrue(deleteNetworkRequest0.isSynchronous());
  }
}
