/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:19:39 GMT 2016
 */

package org.openecomp.mso.adapters.nwrest;

import org.junit.Test;
import static org.junit.Assert.*;

import org.openecomp.mso.openstack.exceptions.MsoExceptionCategory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class NetworkExceptionResponseESTest extends NetworkExceptionResponseESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse("('zix", msoExceptionCategory0, true, "3)w4.");
      Boolean boolean0 = networkExceptionResponse0.getRolledBack();
      assertEquals("('zix", networkExceptionResponse0.getMessage());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.INTERNAL;
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse("9L(TNeou", msoExceptionCategory0, false, "9L(TNeou");
      Boolean boolean0 = networkExceptionResponse0.getRolledBack();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse("");
      String string0 = networkExceptionResponse0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      networkExceptionResponse0.setCategory(msoExceptionCategory0);
      MsoExceptionCategory msoExceptionCategory1 = networkExceptionResponse0.getCategory();
      assertEquals(MsoExceptionCategory.IO, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse();
      Boolean boolean0 = networkExceptionResponse0.getRolledBack();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse("");
      networkExceptionResponse0.getCategory();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse();
      networkExceptionResponse0.setMessage("USERDATA");
      String string0 = networkExceptionResponse0.getMessage();
      assertEquals("USERDATA", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse();
      networkExceptionResponse0.setRolledBack((Boolean) null);
      assertNull(networkExceptionResponse0.getCategory());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NetworkExceptionResponse networkExceptionResponse0 = new NetworkExceptionResponse();
      String string0 = networkExceptionResponse0.getMessage();
      assertNull(string0);
  }
}
