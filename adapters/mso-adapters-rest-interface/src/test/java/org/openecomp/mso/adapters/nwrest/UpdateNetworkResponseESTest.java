/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:27:07 GMT 2016
 */

package org.openecomp.mso.adapters.nwrest;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class UpdateNetworkResponseESTest extends UpdateNetworkResponseESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse("|YT76&e:{$$La`3", "", (Map<String, String>) hashMap0, "h#%+?1`[X0M#}D0#1");
      updateNetworkResponse0.getSubnetMap();
      assertEquals("", updateNetworkResponse0.getNeutronNetworkId());
      assertEquals("|YT76&e:{$$La`3", updateNetworkResponse0.getNetworkId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse("|YT76&e:{$$La`3", "", (Map<String, String>) hashMap0, "h#%+?1`[X0M#}D0#1");
      hashMap0.put((String) null, "|YT76&e:{$$La`3");
      updateNetworkResponse0.getSubnetMap();
      assertEquals("", updateNetworkResponse0.getNeutronNetworkId());
      assertEquals("|YT76&e:{$$La`3", updateNetworkResponse0.getNetworkId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse();
      String string0 = updateNetworkResponse0.getNeutronNetworkId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse();
      String string0 = updateNetworkResponse0.getNetworkId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse("", "", (Map<String, String>) null, "");
      String string0 = updateNetworkResponse0.getNetworkId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse("+xyc4(mUPnyf\"U)b", "+xyc4(mUPnyf\"U)b", (Map<String, String>) null, "K:spgI9eR/g*L\"*8OY");
      String string0 = updateNetworkResponse0.getNetworkId();
      assertEquals("+xyc4(mUPnyf\"U)b", string0);
      assertEquals("+xyc4(mUPnyf\"U)b", updateNetworkResponse0.getNeutronNetworkId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse();
      Map<String, String> map0 = updateNetworkResponse0.getSubnetMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse();
      updateNetworkResponse0.setNetworkId("");
      assertNull(updateNetworkResponse0.getNeutronNetworkId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      updateNetworkResponse0.setSubnetMap(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse("", "", (Map<String, String>) null, "?B\"6@FJt`=0vemyZk");
      String string0 = updateNetworkResponse0.getNeutronNetworkId();
      assertEquals("", updateNetworkResponse0.getNetworkId());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateNetworkResponse updateNetworkResponse0 = new UpdateNetworkResponse();
      updateNetworkResponse0.setNeutronNetworkId("~<;oyAz");
      String string0 = updateNetworkResponse0.getNeutronNetworkId();
      assertEquals("~<;oyAz", string0);
  }
}
