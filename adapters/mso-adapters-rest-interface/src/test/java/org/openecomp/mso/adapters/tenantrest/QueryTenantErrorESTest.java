/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:23:14 GMT 2016
 */

package org.openecomp.mso.adapters.tenantrest;

import org.junit.Test;
import static org.junit.Assert.*;

import org.openecomp.mso.openstack.exceptions.MsoExceptionCategory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class QueryTenantErrorESTest extends QueryTenantErrorESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QueryTenantError queryTenantError0 = new QueryTenantError();
      String string0 = queryTenantError0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.OPENSTACK;
      QueryTenantError queryTenantError0 = new QueryTenantError("", msoExceptionCategory0);
      assertEquals("", queryTenantError0.getMessage());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QueryTenantError queryTenantError0 = new QueryTenantError();
      queryTenantError0.setMessage("Io21y\"Bvi");
      String string0 = queryTenantError0.getMessage();
      assertEquals("Io21y\"Bvi", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QueryTenantError queryTenantError0 = new QueryTenantError();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.OPENSTACK;
      queryTenantError0.setCategory(msoExceptionCategory0);
      MsoExceptionCategory msoExceptionCategory1 = queryTenantError0.getCategory();
      assertEquals(MsoExceptionCategory.OPENSTACK, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QueryTenantError queryTenantError0 = new QueryTenantError("");
      String string0 = queryTenantError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QueryTenantError queryTenantError0 = new QueryTenantError();
      queryTenantError0.getCategory();
  }
}
