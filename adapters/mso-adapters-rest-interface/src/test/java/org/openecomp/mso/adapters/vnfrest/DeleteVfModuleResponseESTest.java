/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 20 14:09:17 GMT 2017
 */

package org.openecomp.mso.adapters.vnfrest;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.openecomp.mso.adapters.vnfrest.DeleteVfModuleResponse;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class DeleteVfModuleResponseESTest extends DeleteVfModuleResponseESTestscaffolding {

    @Test(timeout = 4000)
    public void test00()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        deleteVfModuleResponse0.setVnfId("|Hny");
        String string0 = deleteVfModuleResponse0.getVnfId();
        assertEquals("|Hny", string0);
    }

    @Test(timeout = 4000)
    public void test01()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        deleteVfModuleResponse0.setVnfId("");
        String string0 = deleteVfModuleResponse0.getVnfId();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test02()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        deleteVfModuleResponse0.setVfModuleOutputs((Map<String, String>) null);
        Map<String, String> map0 = deleteVfModuleResponse0.getVfModuleOutputs();
        assertNull(map0);
    }

    @Test(timeout = 4000)
    public void test03()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        deleteVfModuleResponse0.setVfModuleId("z");
        String string0 = deleteVfModuleResponse0.getVfModuleId();
        assertEquals("z", string0);
    }

    @Test(timeout = 4000)
    public void test04()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        String string0 = deleteVfModuleResponse0.getVnfId();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test05()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        Boolean boolean0 = deleteVfModuleResponse0.getVfModuleDeleted();
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        Map<String, String> map0 = deleteVfModuleResponse0.getVfModuleOutputs();
        deleteVfModuleResponse0.setVfModuleOutputs(map0);
        assertNull(deleteVfModuleResponse0.getVnfId());
    }

    @Test(timeout = 4000)
    public void test07()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        String string0 = deleteVfModuleResponse0.getVfModuleId();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test08()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse("as~HC[>z,.,Z :hLu", "as~HC[>z,.,Z :hLu", (Boolean) null, "as~HC[>z,.,Z :hLu", (Map<String, String>) null);
        assertEquals("as~HC[>z,.,Z :hLu", deleteVfModuleResponse0.getVnfId());
    }

    @Test(timeout = 4000)
    public void test09()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        deleteVfModuleResponse0.setVfModuleDeleted((Boolean) null);
        assertNull(deleteVfModuleResponse0.getMessageId());
    }

    @Test(timeout = 4000)
    public void test10()  throws Throwable  {
        DeleteVfModuleResponse deleteVfModuleResponse0 = new DeleteVfModuleResponse();
        deleteVfModuleResponse0.setVfModuleId("");
        String string0 = deleteVfModuleResponse0.getVfModuleId();
        assertEquals("", string0);
    }
}
