/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:24:18 GMT 2016
 */

package org.openecomp.mso.adapters.vnfrest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.openecomp.mso.entity.MsoRequest;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class UpdateVfModuleRequestESTest extends UpdateVfModuleRequestESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.toXmlString();
      updateVfModuleRequest0.setVfModuleId("xM");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      updateVfModuleRequest0.setVnfType("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<updateVfModuleRequest>\n    <msoRequest/>\n    <vfModuleParams/>\n</updateVfModuleRequest>\n");
      hashMap0.entrySet();
      updateVfModuleRequest0.setVfModuleParams(hashMap0);
      updateVfModuleRequest0.getVnfType();
      updateVfModuleRequest0.setVfModuleId("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<updateVfModuleRequest>\n    <msoRequest/>\n    <vfModuleParams/>\n</updateVfModuleRequest>\n");
      updateVfModuleRequest0.setVolumeGroupStackId("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<updateVfModuleRequest>\n    <msoRequest/>\n    <vfModuleParams/>\n</updateVfModuleRequest>\n");
      updateVfModuleRequest0.setCloudSiteId("$i@h");
      updateVfModuleRequest0.setVfModuleParams(hashMap0);
      updateVfModuleRequest0.setTenantId("$i@h");
      MsoRequest msoRequest0 = new MsoRequest();
      msoRequest0.setServiceInstanceId("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<updateVfModuleRequest>\n    <msoRequest/>\n    <vfModuleParams/>\n</updateVfModuleRequest>\n");
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      Boolean boolean0 = new Boolean("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<updateVfModuleRequest>\n    <msoRequest/>\n    <vfModuleParams/>\n</updateVfModuleRequest>\n");
      updateVfModuleRequest0.setFailIfExists(boolean0);
      updateVfModuleRequest0.getVfModuleStackId();
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.setBaseVfModuleId("$i@h");
      updateVfModuleRequest0.setVfModuleId((String) null);
      updateVfModuleRequest0.getVolumeGroupStackId();
      String string0 = updateVfModuleRequest0.getTenantId();
      assertEquals("$i@h", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVnfType(">LosD~A.W]T\"Ht");
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.setVnfType(">LosD~A.W]T\"Ht");
      updateVfModuleRequest0.setBaseVfModuleStackId("rG\"Rcq79:TWr}bI");
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.setVnfVersion((String) null);
      updateVfModuleRequest0.setVfModuleType((String) null);
      updateVfModuleRequest0.getVnfType();
      String string0 = updateVfModuleRequest0.getVfModuleType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.getVfModuleId();
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.setVfModuleId(";Zz^*Eup;I8");
      updateVfModuleRequest0.getTenantId();
      updateVfModuleRequest0.setVfModuleName((String) null);
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.getVnfId();
      updateVfModuleRequest0.getVfModuleId();
      updateVfModuleRequest0.setVfModuleType((String) null);
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.setVfModuleId("p H/yV<46O");
      updateVfModuleRequest0.setVnfId("");
      assertNull(updateVfModuleRequest0.getVolumeGroupStackId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setBaseVfModuleId("y|.n5Xbo!qUzw");
      updateVfModuleRequest0.setRequestType("y|.n5Xbo!qUzw");
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.getBaseVfModuleStackId();
      updateVfModuleRequest0.getBaseVfModuleId();
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.setSkipAAI((Boolean) null);
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.setRequestType("");
      updateVfModuleRequest0.getVfModuleStackId();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.setTenantId("");
      assertNull(updateVfModuleRequest0.getVfModuleName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleStackId("jaxb.formatted.output");
      updateVfModuleRequest0.setVfModuleName("jaxb.formatted.output");
      Boolean boolean0 = Boolean.valueOf("");
      Boolean.logicalXor(false, false);
      updateVfModuleRequest0.setFailIfExists(boolean0);
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.setVfModuleType("jaxb.formatted.output");
      Boolean.logicalOr(true, true);
      updateVfModuleRequest0.setBackout((Boolean) null);
      updateVfModuleRequest0.getVfModuleStackId();
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.setVolumeGroupId("jaxb.formatted.output");
      updateVfModuleRequest0.getBaseVfModuleStackId();
      updateVfModuleRequest0.setRequestType(".zGbDU h'`XYM2");
      updateVfModuleRequest0.getVfModuleStackId();
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.getVolumeGroupId();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      updateVfModuleRequest0.setVfModuleParams(hashMap0);
      updateVfModuleRequest0.setBaseVfModuleId("");
      assertNull(updateVfModuleRequest0.getVfModuleId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      Boolean boolean0 = updateVfModuleRequest0.getFailIfExists();
      assertNull(boolean0);
      
      updateVfModuleRequest0.getVnfId();
      updateVfModuleRequest0.setVnfVersion((String) null);
      updateVfModuleRequest0.setBaseVfModuleId((String) null);
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.getVfModuleStackId();
      // Undeclared exception!
      try { 
        updateVfModuleRequest0.toJsonString();
        fail("Expecting exception: VerifyError");
      
      } catch(VerifyError e) {
         //
         // (class: org/codehaus/jackson/map/MapperConfig, method: <clinit> signature: ()V) Bad type in putfield/putstatic
         //
         verifyException("org.codehaus.jackson.map.ObjectMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleStackId("tnNRSR)XN");
      updateVfModuleRequest0.setCloudSiteId("");
      updateVfModuleRequest0.setVnfId("");
      updateVfModuleRequest0.setVfModuleType("");
      updateVfModuleRequest0.setVfModuleStackId("");
      MsoRequest msoRequest0 = new MsoRequest();
      msoRequest0.setServiceInstanceId("");
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.setVfModuleName("*$x.GUPO|E:0LZ<");
      String string0 = updateVfModuleRequest0.getVfModuleType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.setBackout((Boolean) null);
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.setVolumeGroupStackId((String) null);
      updateVfModuleRequest0.setRequestType("td");
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.setVolumeGroupId((String) null);
      updateVfModuleRequest0.getBaseVfModuleStackId();
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      assertNull(updateVfModuleRequest0.getVolumeGroupStackId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVolumeGroupStackId("");
      updateVfModuleRequest0.setVfModuleType("");
      updateVfModuleRequest0.setVnfVersion("");
      updateVfModuleRequest0.getVolumeGroupId();
      MsoRequest msoRequest0 = new MsoRequest("jaxb.formatted.output", (String) null);
      msoRequest0.setServiceInstanceId((String) null);
      Boolean boolean0 = Boolean.FALSE;
      updateVfModuleRequest0.setSkipAAI(boolean0);
      msoRequest0.setServiceInstanceId((String) null);
      msoRequest0.setServiceInstanceId("");
      updateVfModuleRequest0.setVolumeGroupId("9oR~ ");
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.getVfModuleStackId();
      updateVfModuleRequest0.setVfModuleName("");
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.getRequestType();
      String string0 = updateVfModuleRequest0.getRequestType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("8bJYY1&kKT", "8bJYY1&kKT");
      hashMap0.entrySet();
      updateVfModuleRequest0.setVfModuleParams(hashMap0);
      updateVfModuleRequest0.toXmlString();
      updateVfModuleRequest0.setVolumeGroupId((String) null);
      updateVfModuleRequest0.getMsoRequest();
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(true, true);
      updateVfModuleRequest0.setBackout(boolean0);
      updateVfModuleRequest0.getBackout();
      Boolean boolean1 = Boolean.valueOf(true);
      Boolean.logicalXor(true, true);
      updateVfModuleRequest0.setFailIfExists(boolean1);
      assertNull(updateVfModuleRequest0.getVolumeGroupId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleType(" h&a.O(2wp'tIm%yKJY");
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.getVolumeGroupId();
      updateVfModuleRequest0.getVolumeGroupId();
      String string0 = updateVfModuleRequest0.getVfModuleType();
      assertEquals(" h&a.O(2wp'tIm%yKJY", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setTenantId("");
      updateVfModuleRequest0.setVolumeGroupStackId("");
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.setBaseVfModuleId("Q)H$p?i^[$S\u0003_Q");
      updateVfModuleRequest0.setVnfVersion("");
      updateVfModuleRequest0.setTenantId("Q)H$p?i^[$S\u0003_Q");
      updateVfModuleRequest0.setVfModuleId("");
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.setVfModuleType("(");
      String string0 = updateVfModuleRequest0.getVolumeGroupStackId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getCloudSiteId();
      Map<String, String> map0 = updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.setTenantId((String) null);
      updateVfModuleRequest0.setBaseVfModuleStackId((String) null);
      updateVfModuleRequest0.getBaseVfModuleId();
      updateVfModuleRequest0.getTenantId();
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.setVfModuleParams(map0);
      updateVfModuleRequest0.setBaseVfModuleId("og~*KEPst]:7");
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.setVnfId("");
      Boolean boolean0 = new Boolean(false);
      updateVfModuleRequest0.setBackout(boolean0);
      updateVfModuleRequest0.setVnfType("");
      String string0 = updateVfModuleRequest0.getBaseVfModuleId();
      assertEquals("og~*KEPst]:7", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("tW$,C`\"=2HoY\"N", "tW$,C`\"=2HoY\"N");
      updateVfModuleRequest0.setVfModuleParams(hashMap0);
      updateVfModuleRequest0.setBaseVfModuleId((String) null);
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.getVnfVersion();
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      msoRequest0.setRequestId("HA");
      msoRequest0.setServiceInstanceId("}Fo|8N");
      msoRequest0.setRequestId("");
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      Map<String, String> map0 = updateVfModuleRequest0.getVfModuleParams();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setTenantId("");
      updateVfModuleRequest0.setMessageId("");
      updateVfModuleRequest0.toXmlString();
      updateVfModuleRequest0.setVfModuleType("");
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.setVfModuleType((String) null);
      updateVfModuleRequest0.setNotificationUrl((String) null);
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.getBaseVfModuleStackId();
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalOr(false, false);
      updateVfModuleRequest0.setFailIfExists(boolean0);
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.setBaseVfModuleStackId("4N9!j*vkAv[");
      updateVfModuleRequest0.setMessageId((String) null);
      String string0 = updateVfModuleRequest0.getVnfType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setBaseVfModuleStackId("jaxb.formatted.output");
      updateVfModuleRequest0.getVnfId();
      updateVfModuleRequest0.getSkipAAI();
      Boolean.getBoolean((String) null);
      updateVfModuleRequest0.setFailIfExists((Boolean) null);
      updateVfModuleRequest0.getBaseVfModuleStackId();
      updateVfModuleRequest0.setVfModuleStackId((String) null);
      Map<String, String> map0 = updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.setVfModuleParams(map0);
      String string0 = updateVfModuleRequest0.getRequestType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      Boolean boolean0 = Boolean.FALSE;
      updateVfModuleRequest0.setTenantId("");
      updateVfModuleRequest0.setVnfId("^");
      Boolean.logicalAnd(false, false);
      Boolean.logicalOr(false, true);
      Boolean.logicalXor(false, false);
      updateVfModuleRequest0.setCloudSiteId(", )iA\"g F{9C");
      Boolean boolean1 = Boolean.valueOf("");
      updateVfModuleRequest0.setFailIfExists(boolean1);
      updateVfModuleRequest0.setFailIfExists(boolean0);
      updateVfModuleRequest0.getVfModuleParams();
      String string0 = updateVfModuleRequest0.getTenantId();
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.getVnfId();
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.getVnfVersion();
      updateVfModuleRequest0.setVfModuleStackId("^");
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      String string1 = updateVfModuleRequest0.getCloudSiteId();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setNotificationUrl("XC8g/I");
      updateVfModuleRequest0.setVfModuleParams((Map<String, String>) null);
      updateVfModuleRequest0.setRequestType("");
      updateVfModuleRequest0.setVfModuleType("");
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.setBackout((Boolean) null);
      updateVfModuleRequest0.setTenantId("");
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.setMsoRequest((MsoRequest) null);
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.getBaseVfModuleId();
      updateVfModuleRequest0.setVfModuleType((String) null);
      updateVfModuleRequest0.setVfModuleType("");
      updateVfModuleRequest0.setTenantId((String) null);
      updateVfModuleRequest0.getTenantId();
      updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setVnfVersion("");
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.setVfModuleType((String) null);
      String string0 = updateVfModuleRequest0.getVolumeGroupStackId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleId("");
      updateVfModuleRequest0.setRequestType("");
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.setVolumeGroupStackId("?|d!=PZ_");
      updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setVnfType("");
      updateVfModuleRequest0.setVnfType((String) null);
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.setTenantId("");
      assertEquals("", updateVfModuleRequest0.getRequestType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVfModuleName();
      Boolean boolean0 = new Boolean("");
      updateVfModuleRequest0.setBaseVfModuleId((String) null);
      Boolean.getBoolean("");
      Boolean.getBoolean("");
      MsoRequest msoRequest0 = new MsoRequest();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.setBackout(boolean0);
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.setVolumeGroupId("jaxb.formatted.output");
      updateVfModuleRequest0.getVolumeGroupId();
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.getCloudSiteId();
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.getVolumeGroupId();
      updateVfModuleRequest0.setVnfType("");
      updateVfModuleRequest0.getVnfVersion();
      updateVfModuleRequest0.setVnfVersion("nSI5S-r/)Nt{7E");
      updateVfModuleRequest0.setTenantId((String) null);
      assertNull(updateVfModuleRequest0.getVnfId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVolumeGroupId("1}p^{.,|o6fiV%T=nE");
      updateVfModuleRequest0.getVfModuleId();
      updateVfModuleRequest0.getBaseVfModuleId();
      updateVfModuleRequest0.setRequestType((String) null);
      updateVfModuleRequest0.setVnfId("()4#Rt0S|Ok?6LpP6d");
      updateVfModuleRequest0.setCloudSiteId((String) null);
      updateVfModuleRequest0.setVnfId("OTV[DjNZt,,%");
      updateVfModuleRequest0.setVnfId((String) null);
      updateVfModuleRequest0.setVnfType((String) null);
      updateVfModuleRequest0.getRequestType();
      updateVfModuleRequest0.getVolumeGroupId();
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      updateVfModuleRequest0.getBackout();
      updateVfModuleRequest0.setBackout((Boolean) null);
      updateVfModuleRequest0.getVnfVersion();
      updateVfModuleRequest0.setVfModuleId("()4#Rt0S|Ok?6LpP6d");
      String string0 = updateVfModuleRequest0.getBaseVfModuleStackId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVolumeGroupId();
      updateVfModuleRequest0.setVnfVersion((String) null);
      updateVfModuleRequest0.getVfModuleName();
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.setCloudSiteId("");
      updateVfModuleRequest0.getVnfType();
      updateVfModuleRequest0.setVolumeGroupStackId("");
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.getVfModuleId();
      updateVfModuleRequest0.getTenantId();
      UpdateVfModuleRequest updateVfModuleRequest1 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVolumeGroupId();
      updateVfModuleRequest1.getVfModuleStackId();
      updateVfModuleRequest1.getVolumeGroupStackId();
      Boolean boolean0 = new Boolean(false);
      updateVfModuleRequest0.setBackout(boolean0);
      assertNull(updateVfModuleRequest0.getRequestType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      Boolean boolean0 = new Boolean("[b#W!$Hl5#Z");
      updateVfModuleRequest0.setFailIfExists(boolean0);
      String string0 = updateVfModuleRequest0.getCloudSiteId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVolumeGroupStackId();
      updateVfModuleRequest0.getVnfVersion();
      updateVfModuleRequest0.setVfModuleStackId("V|x2kON!8h|bBCf,\"I");
      assertNull(updateVfModuleRequest0.getVnfType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVnfVersion();
      String string0 = updateVfModuleRequest0.getVfModuleName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setTenantId("3G");
      updateVfModuleRequest0.getSkipAAI();
      updateVfModuleRequest0.toXmlString();
      updateVfModuleRequest0.setBackout((Boolean) null);
      updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.setVnfId("MnBvF");
      updateVfModuleRequest0.setTenantId("NX5yxi");
      updateVfModuleRequest0.getVnfId();
      updateVfModuleRequest0.getBaseVfModuleStackId();
      updateVfModuleRequest0.getVfModuleParams();
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      assertNull(msoRequest0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getVfModuleId();
      updateVfModuleRequest0.setBaseVfModuleId("");
      assertNull(updateVfModuleRequest0.getVfModuleName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVnfId("");
      assertNull(updateVfModuleRequest0.getVolumeGroupStackId());
      
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.setFailIfExists((Boolean) null);
      updateVfModuleRequest0.setMessageId((String) null);
      updateVfModuleRequest0.setVolumeGroupId("");
      updateVfModuleRequest0.getVfModuleType();
      updateVfModuleRequest0.setVnfVersion("4x");
      String string0 = updateVfModuleRequest0.getVnfVersion();
      updateVfModuleRequest0.setBaseVfModuleStackId("[Oc:_#*]&+4`o");
      String string1 = updateVfModuleRequest0.getVnfId();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      MsoRequest msoRequest0 = updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setMsoRequest(msoRequest0);
      assertNull(updateVfModuleRequest0.getVnfVersion());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getRequestType();
      Boolean boolean0 = updateVfModuleRequest0.getBackout();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setCloudSiteId("");
      updateVfModuleRequest0.setVfModuleParams((Map<String, String>) null);
      updateVfModuleRequest0.getBaseVfModuleStackId();
      updateVfModuleRequest0.setVnfVersion("");
      updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.getCloudSiteId();
      updateVfModuleRequest0.setVfModuleParams((Map<String, String>) null);
      updateVfModuleRequest0.getVnfVersion();
      updateVfModuleRequest0.getVfModuleStackId();
      updateVfModuleRequest0.getVolumeGroupId();
      updateVfModuleRequest0.setCloudSiteId((String) null);
      updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.setVolumeGroupStackId("[9~u'kSpnk!");
      assertNull(updateVfModuleRequest0.getMessageId());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.setVnfType("");
      updateVfModuleRequest0.setBackout((Boolean) null);
      updateVfModuleRequest0.setBaseVfModuleId("");
      updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.getVnfId();
      updateVfModuleRequest0.setVfModuleId("");
      updateVfModuleRequest0.setVfModuleStackId("");
      updateVfModuleRequest0.getVfModuleId();
      updateVfModuleRequest0.setCloudSiteId("");
      updateVfModuleRequest0.getMsoRequest();
      updateVfModuleRequest0.setVfModuleId("");
      updateVfModuleRequest0.getVnfType();
      Boolean boolean0 = updateVfModuleRequest0.getFailIfExists();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.setBackout((Boolean) null);
      assertNull(updateVfModuleRequest0.getVnfId());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleName("");
      updateVfModuleRequest0.setBaseVfModuleStackId("");
      // Undeclared exception!
      try { 
        updateVfModuleRequest0.toJsonString();
        fail("Expecting exception: VerifyError");
      
      } catch(VerifyError e) {
         //
         // (class: org/codehaus/jackson/map/MapperConfig, method: <clinit> signature: ()V) Bad type in putfield/putstatic
         //
         verifyException("org.codehaus.jackson.map.ObjectMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVolumeGroupStackId("nY0b");
      assertNull(updateVfModuleRequest0.getRequestType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVnfVersion("Ht/U");
      assertNull(updateVfModuleRequest0.getVolumeGroupId());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVnfType("W;cx8uJk]p#e&?c3PcO");
      updateVfModuleRequest0.setVfModuleType("z3qr`!V;?");
      updateVfModuleRequest0.setVfModuleName("W;cx8uJk]p#e&?c3PcO");
      assertNull(updateVfModuleRequest0.getRequestType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.toXmlString();
      String string0 = updateVfModuleRequest0.getBaseVfModuleStackId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setVfModuleName("W#m\"_5ykHHHo_@kq/");
      assertNull(updateVfModuleRequest0.getRequestType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setTenantId("?!vD=6S.7p/[;zX3i");
      assertNull(updateVfModuleRequest0.getMessageId());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setCloudSiteId("");
      Map<String, String> map0 = updateVfModuleRequest0.getVfModuleParams();
      updateVfModuleRequest0.setVfModuleParams(map0);
      updateVfModuleRequest0.setVfModuleParams(map0);
      updateVfModuleRequest0.setVfModuleStackId("");
      assertNull(updateVfModuleRequest0.getRequestType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      Boolean boolean0 = Boolean.valueOf(true);
      Boolean.logicalAnd(true, true);
      Boolean.logicalXor(true, true);
      Boolean.logicalAnd(true, true);
      Boolean.logicalXor(true, false);
      updateVfModuleRequest0.setFailIfExists(boolean0);
      updateVfModuleRequest0.setFailIfExists(boolean0);
      Boolean boolean1 = new Boolean(false);
      Boolean.compare(true, true);
      boolean boolean2 = Boolean.logicalAnd(true, true);
      updateVfModuleRequest0.setSkipAAI(boolean1);
      updateVfModuleRequest0.setBaseVfModuleId("O[9~5!");
      updateVfModuleRequest0.setVfModuleType((String) null);
      updateVfModuleRequest0.getFailIfExists();
      updateVfModuleRequest0.getFailIfExists();
      System.setCurrentTimeMillis(3682L);
      System.setCurrentTimeMillis(3682L);
      System.setCurrentTimeMillis((-116L));
      System.setCurrentTimeMillis((-116L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      Boolean boolean3 = updateVfModuleRequest0.getFailIfExists();
      assertTrue(boolean3.equals((Object)boolean2));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setBaseVfModuleId("");
      assertNull(updateVfModuleRequest0.getMessageId());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      updateVfModuleRequest0.setRequestType("");
      updateVfModuleRequest0.setVfModuleType("ybR");
      assertEquals("ybR", updateVfModuleRequest0.getVfModuleType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UpdateVfModuleRequest updateVfModuleRequest0 = new UpdateVfModuleRequest();
      UpdateVfModuleRequest updateVfModuleRequest1 = new UpdateVfModuleRequest();
      updateVfModuleRequest1.getSkipAAI();
      updateVfModuleRequest0.setFailIfExists((Boolean) null);
      assertNull(updateVfModuleRequest0.getVfModuleName());
  }
}
