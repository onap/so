/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:23:04 GMT 2016
 */

package org.openecomp.mso.adapters.vnfrest;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class UpdateVolumeGroupResponseESTest extends UpdateVolumeGroupResponseESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse("", "F`m", (Map<String, String>) hashMap0, "");
      String string0 = updateVolumeGroupResponse0.getVolumeGroupStackId();
      assertEquals("", updateVolumeGroupResponse0.getVolumeGroupId());
      assertEquals("F`m", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse("", "F`m", (Map<String, String>) hashMap0, "");
      hashMap0.put("9GcmH1su}s&bc=", "");
      updateVolumeGroupResponse0.getVolumeGroupOutputs();
      assertEquals("F`m", updateVolumeGroupResponse0.getVolumeGroupStackId());
      assertEquals("", updateVolumeGroupResponse0.getVolumeGroupId());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse();
      String string0 = updateVolumeGroupResponse0.getVolumeGroupId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse("TzCXEX\"l?\"8x", "", (Map<String, String>) hashMap0, "TzCXEX\"l?\"8x");
      String string0 = updateVolumeGroupResponse0.getVolumeGroupId();
      assertEquals("", updateVolumeGroupResponse0.getVolumeGroupStackId());
      assertEquals("TzCXEX\"l?\"8x", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse();
      Map<String, String> map0 = updateVolumeGroupResponse0.getVolumeGroupOutputs();
      updateVolumeGroupResponse0.setVolumeGroupOutputs(map0);
      assertNull(updateVolumeGroupResponse0.getVolumeGroupStackId());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse();
      updateVolumeGroupResponse0.setVolumeGroupStackId("");
      String string0 = updateVolumeGroupResponse0.getVolumeGroupStackId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse();
      String string0 = updateVolumeGroupResponse0.getVolumeGroupStackId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse("", "", (Map<String, String>) null, "");
      Map<String, String> map0 = updateVolumeGroupResponse0.getVolumeGroupOutputs();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse("", "", (Map<String, String>) null, "");
      updateVolumeGroupResponse0.setVolumeGroupId("@(Ux]`8WPh");
      assertEquals("@(Ux]`8WPh", updateVolumeGroupResponse0.getVolumeGroupId());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UpdateVolumeGroupResponse updateVolumeGroupResponse0 = new UpdateVolumeGroupResponse("", "", (Map<String, String>) hashMap0, "");
      String string0 = updateVolumeGroupResponse0.getVolumeGroupId();
      assertEquals("", string0);
  }
}
