/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 20 14:10:44 GMT 2017
 */

package org.openecomp.mso.adapters.vnfrest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.openecomp.mso.adapters.vnfrest.VfModuleRollback;
import org.openecomp.mso.entity.MsoRequest;
import org.openecomp.mso.openstack.beans.VnfRollback;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class VfModuleRollbackESTest extends VfModuleRollbackESTestscaffolding {

    @Test(timeout = 4000)
    public void test00()  throws Throwable  {
        VnfRollback vnfRollback0 = mock(VnfRollback.class, new ViolatedAssumptionAnswer());
        doReturn((String) null).when(vnfRollback0).getCloudSiteId();
        doReturn((MsoRequest) null).when(vnfRollback0).getMsoRequest();
        doReturn((String) null).when(vnfRollback0).getTenantId();
        doReturn(false).when(vnfRollback0).getVnfCreated();
        doReturn((String) null).when(vnfRollback0).getVnfId();
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, "Gf(%P^Jj)\u0005JzrF?~", "Gf(%P^Jj)\u0005JzrF?~", "Gf(%P^Jj)\u0005JzrF?~");
        vfModuleRollback0.setVfModuleCreated(true);
        boolean boolean0 = vfModuleRollback0.isVfModuleCreated();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test01()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setVnfId("G\"nvy<Sfjr`hfI8Zl");
        vfModuleRollback0.getVnfId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test02()  throws Throwable  {
        VnfRollback vnfRollback0 = mock(VnfRollback.class, new ViolatedAssumptionAnswer());
        doReturn((String) null).when(vnfRollback0).getCloudSiteId();
        doReturn((MsoRequest) null).when(vnfRollback0).getMsoRequest();
        doReturn((String) null).when(vnfRollback0).getTenantId();
        doReturn(false).when(vnfRollback0).getVnfCreated();
        doReturn((String) null).when(vnfRollback0).getVnfId();
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, "RS,v^T.EEJZW/qj~EC", "RS,v^T.EEJZW/qj~EC", "");
        vfModuleRollback0.setVnfId("");
        vfModuleRollback0.getVnfId();
        assertEquals("RS,v^T.EEJZW/qj~EC", vfModuleRollback0.getVfModuleId());
        assertEquals("RS,v^T.EEJZW/qj~EC", vfModuleRollback0.getVfModuleStackId());
        assertEquals("", vfModuleRollback0.getMessageId());
    }

    @Test(timeout = 4000)
    public void test03()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getVfModuleStackId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test04()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setVfModuleStackId("G8yt`J");
        vfModuleRollback0.getVfModuleStackId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test05()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setVfModuleId("<V0(ch?1");
        vfModuleRollback0.getVfModuleId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test06()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setVfModuleId("");
        vfModuleRollback0.getVfModuleId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test07()  throws Throwable  {
        VnfRollback vnfRollback0 = mock(VnfRollback.class, new ViolatedAssumptionAnswer());
        doReturn((String) null).when(vnfRollback0).getCloudSiteId();
        doReturn((MsoRequest) null).when(vnfRollback0).getMsoRequest();
        doReturn((String) null).when(vnfRollback0).getTenantId();
        doReturn(false).when(vnfRollback0).getVnfCreated();
        doReturn((String) null).when(vnfRollback0).getVnfId();
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, "RS,v^T.EEJZW/qj~EC", "RS,v^T.EEJZW/qj~EC", "");
        vfModuleRollback0.setTenantId("RS,v^T.EEJZW/qj~EC");
        vfModuleRollback0.getTenantId();
        assertEquals("", vfModuleRollback0.getMessageId());
        assertEquals("RS,v^T.EEJZW/qj~EC", vfModuleRollback0.getVfModuleStackId());
        assertEquals("RS,v^T.EEJZW/qj~EC", vfModuleRollback0.getVfModuleId());
    }

    @Test(timeout = 4000)
    public void test08()  throws Throwable  {
        MsoRequest msoRequest0 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback("", "", "", false, "72M#WP;7?8*Y~!q", "72M#WP;7?8*Y~!q", msoRequest0, "");
        assertEquals("72M#WP;7?8*Y~!q", vfModuleRollback0.getTenantId());

        vfModuleRollback0.setTenantId("");
        vfModuleRollback0.getTenantId();
        assertEquals("", vfModuleRollback0.getMessageId());
    }

    @Test(timeout = 4000)
    public void test09()  throws Throwable  {
        MsoRequest msoRequest0 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
        doReturn((String) null).when(msoRequest0).toString();
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback(", vnfCreated=", ", vnfCreated=", ", vnfCreated=", false, ", vnfCreated=", "Jd,{S<BvHJAw+", msoRequest0, "Jd,{S<BvHJAw+");
        vfModuleRollback0.getMsoRequest();
        assertEquals("Jd,{S<BvHJAw+", vfModuleRollback0.getCloudSiteId());
        assertEquals(", vnfCreated=", vfModuleRollback0.getTenantId());
        assertEquals(", vnfCreated=", vfModuleRollback0.getVfModuleId());
        assertEquals(", vnfCreated=", vfModuleRollback0.getVfModuleStackId());
        assertEquals(", vnfCreated=", vfModuleRollback0.getVnfId());
        assertEquals("Jd,{S<BvHJAw+", vfModuleRollback0.getMessageId());
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test10()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setMessageId("");
        vfModuleRollback0.getMessageId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test11()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setCloudSiteId("G8yt`J");
        vfModuleRollback0.getCloudSiteId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test12()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getMessageId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test13()  throws Throwable  {
        MsoRequest msoRequest0 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback("", "", "", false, "72M#WP;7?8*Y~!q", "72M#WP;7?8*Y~!q", msoRequest0, "");
        MsoRequest msoRequest1 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
        vfModuleRollback0.setMsoRequest(msoRequest1);
        assertEquals("", vfModuleRollback0.getVnfId());
        assertEquals("72M#WP;7?8*Y~!q", vfModuleRollback0.getCloudSiteId());
        assertEquals("", vfModuleRollback0.getVfModuleStackId());
        assertEquals("", vfModuleRollback0.getMessageId());
        assertEquals("72M#WP;7?8*Y~!q", vfModuleRollback0.getTenantId());
        assertFalse(vfModuleRollback0.isVfModuleCreated());
        assertEquals("", vfModuleRollback0.getVfModuleId());
    }

    @Test(timeout = 4000)
    public void test14()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getTenantId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test15()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getVnfId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test16()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getVfModuleId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test17()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setMessageId("{2)+G6]E#s_=J_S&");
        vfModuleRollback0.getMessageId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test18()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getCloudSiteId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test19()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.setCloudSiteId("");
        vfModuleRollback0.getCloudSiteId();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test20()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        vfModuleRollback0.getMsoRequest();
        assertFalse(vfModuleRollback0.isVfModuleCreated());
    }

    @Test(timeout = 4000)
    public void test21()  throws Throwable  {
        MsoRequest msoRequest0 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback("!y-*0?6`~", "", "", true, "", "", msoRequest0, "2<6zlA_/MQ2I~c6U0");
        String string0 = vfModuleRollback0.getVfModuleStackId();
        assertEquals("2<6zlA_/MQ2I~c6U0", vfModuleRollback0.getMessageId());
        assertEquals("", vfModuleRollback0.getTenantId());
        assertEquals("", string0);
        assertTrue(vfModuleRollback0.isVfModuleCreated());
        assertEquals("!y-*0?6`~", vfModuleRollback0.getVnfId());
        assertEquals("", vfModuleRollback0.getCloudSiteId());
        assertEquals("", vfModuleRollback0.getVfModuleId());
    }

    @Test(timeout = 4000)
    public void test22()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = null;
        try {
            vfModuleRollback0 = new VfModuleRollback((VnfRollback) null, "", "VnfRollback: cloud=", "");
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.openecomp.mso.adapters.vnfrest.VfModuleRollback", e);
        }
    }

    @Test(timeout = 4000)
    public void test23()  throws Throwable  {
        VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
        boolean boolean0 = vfModuleRollback0.isVfModuleCreated();
        assertFalse(boolean0);
    }
}
