/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:20:21 GMT 2016
 */

package org.openecomp.mso.adapters.vnfrest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.openecomp.mso.entity.MsoRequest;
import org.openecomp.mso.openstack.beans.VnfRollback;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class VfModuleRollbackESTest extends VfModuleRollbackESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      boolean boolean0 = vfModuleRollback0.isVfModuleCreated();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MsoRequest msoRequest0 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback("", (String) null, "", false, "", "", msoRequest0, "");
      String string0 = vfModuleRollback0.getVnfId();
      assertNotNull(string0);
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.setVfModuleStackId("ORmnn<.2+zb!'teC5");
      vfModuleRollback0.getVfModuleStackId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MsoRequest msoRequest0 = mock(MsoRequest.class, new ViolatedAssumptionAnswer());
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback("", (String) null, "", false, "", "", msoRequest0, "");
      String string0 = vfModuleRollback0.getVfModuleStackId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, "", "", "");
      String string0 = vfModuleRollback0.getVfModuleId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.setTenantId("ORmnn<.2+zb!'teC5");
      vfModuleRollback0.getTenantId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.setTenantId("");
      vfModuleRollback0.getTenantId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.getMsoRequest();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.getMessageId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, "", "", "");
      String string0 = vfModuleRollback0.getMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.setCloudSiteId("yIF#jVMha");
      vfModuleRollback0.getCloudSiteId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback("^4s-K=q)*Tb/", "XG?<}b?*4B", "XG?<}b?*4B", false, "", "", (MsoRequest) null, (String) null);
      String string0 = vfModuleRollback0.getCloudSiteId();
      assertEquals("", string0);
      assertEquals("XG?<}b?*4B", vfModuleRollback0.getVfModuleId());
      assertEquals("", vfModuleRollback0.getTenantId());
      assertNotNull(string0);
      assertEquals("^4s-K=q)*Tb/", vfModuleRollback0.getVnfId());
      assertEquals("XG?<}b?*4B", vfModuleRollback0.getVfModuleStackId());
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = null;
      try {
        vfModuleRollback0 = new VfModuleRollback((VnfRollback) null, ", tenantCreated=", ", tenantCreated=", ", tenantCreated=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.adapters.vnfrest.VfModuleRollback", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      boolean boolean0 = vfModuleRollback0.isVfModuleCreated();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.getVnfId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.getCloudSiteId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      MsoRequest msoRequest1 = vfModuleRollback0.getMsoRequest();
      assertNull(msoRequest1.getRequestId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      vfModuleRollback0.setVfModuleId("TUj9qO3IbhX0v~");
      String string0 = vfModuleRollback0.getVfModuleId();
      assertEquals("TUj9qO3IbhX0v~", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      vfModuleRollback0.setMessageId(", tenantCreated=");
      assertNull(vfModuleRollback0.getVfModuleId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.setVnfId("n+S7/*fyf8oP5jpt#");
      vfModuleRollback0.getVnfId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      vfModuleRollback0.setVfModuleCreated(true);
      assertTrue(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      vfModuleRollback0.setMsoRequest(msoRequest0);
      assertEquals(", requestType = ", vfModuleRollback0.getTenantId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      String string0 = vfModuleRollback0.getMessageId();
      assertEquals("TgLE(4jqRR&B*tjC*6", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.getVfModuleStackId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MsoRequest msoRequest0 = new MsoRequest();
      VnfRollback vnfRollback0 = new VnfRollback("", ", requestType = ", "", true, true, msoRequest0, " .~y_qT", "", "");
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback(vnfRollback0, (String) null, (String) null, "TgLE(4jqRR&B*tjC*6");
      String string0 = vfModuleRollback0.getVfModuleId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VfModuleRollback vfModuleRollback0 = new VfModuleRollback();
      vfModuleRollback0.getTenantId();
      assertFalse(vfModuleRollback0.isVfModuleCreated());
  }
}
