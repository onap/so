/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:37:41 GMT 2016
 */

package org.openecomp.mso.adapters.network.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class RollbackNetworkNotificationESTest extends RollbackNetworkNotificationESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.completed = true;
      boolean boolean0 = rollbackNetworkNotification0.isCompleted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.messageId = "";
      rollbackNetworkNotification0.messageId = "V^{b/%gy^";
      String string0 = rollbackNetworkNotification0.getMessageId();
      assertEquals("V^{b/%gy^", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.messageId = "";
      String string0 = rollbackNetworkNotification0.getMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      rollbackNetworkNotification0.exception = msoExceptionCategory0;
      MsoExceptionCategory msoExceptionCategory1 = rollbackNetworkNotification0.getException();
      assertEquals(MsoExceptionCategory.IO, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.setErrorMessage("06SZ x\"@[d5*iJ");
      String string0 = rollbackNetworkNotification0.getErrorMessage();
      assertEquals("06SZ x\"@[d5*iJ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.errorMessage = "";
      String string0 = rollbackNetworkNotification0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.setCompleted(false);
      assertFalse(rollbackNetworkNotification0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      boolean boolean0 = rollbackNetworkNotification0.isCompleted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      String string0 = rollbackNetworkNotification0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      rollbackNetworkNotification0.setException(msoExceptionCategory0);
      assertFalse(rollbackNetworkNotification0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      String string0 = rollbackNetworkNotification0.getMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.getException();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RollbackNetworkNotification rollbackNetworkNotification0 = new RollbackNetworkNotification();
      rollbackNetworkNotification0.setMessageId("!!IDL8");
      assertNull(rollbackNetworkNotification0.getErrorMessage());
  }
}
