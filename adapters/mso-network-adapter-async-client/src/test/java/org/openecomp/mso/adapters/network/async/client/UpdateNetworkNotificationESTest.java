/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:35:17 GMT 2016
 */

package org.openecomp.mso.adapters.network.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class UpdateNetworkNotificationESTest extends UpdateNetworkNotificationESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.setCompleted(true);
      boolean boolean0 = updateNetworkNotification0.isCompleted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      UpdateNetworkNotification.SubnetIdMap updateNetworkNotification_SubnetIdMap0 = new UpdateNetworkNotification.SubnetIdMap();
      updateNetworkNotification0.subnetIdMap = updateNetworkNotification_SubnetIdMap0;
      UpdateNetworkNotification.SubnetIdMap updateNetworkNotification_SubnetIdMap1 = updateNetworkNotification0.getSubnetIdMap();
      assertSame(updateNetworkNotification_SubnetIdMap1, updateNetworkNotification_SubnetIdMap0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      NetworkRollback networkRollback0 = new NetworkRollback();
      networkRollback0.networkCreated = true;
      updateNetworkNotification0.rollback = networkRollback0;
      NetworkRollback networkRollback1 = updateNetworkNotification0.getRollback();
      assertNull(networkRollback1.getCloudId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      NetworkRollback networkRollback0 = new NetworkRollback();
      updateNetworkNotification0.rollback = networkRollback0;
      NetworkRollback networkRollback1 = updateNetworkNotification0.getRollback();
      assertSame(networkRollback1, networkRollback0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.messageId = "Uc.S9x&9M[n";
      String string0 = updateNetworkNotification0.getMessageId();
      assertEquals("Uc.S9x&9M[n", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.messageId = "";
      String string0 = updateNetworkNotification0.getMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      updateNetworkNotification0.exception = msoExceptionCategory0;
      MsoExceptionCategory msoExceptionCategory1 = updateNetworkNotification0.getException();
      assertEquals(MsoExceptionCategory.IO, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.setErrorMessage("org.openecomp.mso.adapters.network.async.client.MsoExceptionCategory");
      String string0 = updateNetworkNotification0.getErrorMessage();
      assertEquals("org.openecomp.mso.adapters.network.async.client.MsoExceptionCategory", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.errorMessage = "";
      String string0 = updateNetworkNotification0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdateNetworkNotification.SubnetIdMap updateNetworkNotification_SubnetIdMap0 = new UpdateNetworkNotification.SubnetIdMap();
      updateNetworkNotification_SubnetIdMap0.getEntry();
      List<UpdateNetworkNotification.SubnetIdMap.Entry> list0 = updateNetworkNotification_SubnetIdMap0.getEntry();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateNetworkNotification.SubnetIdMap.Entry updateNetworkNotification_SubnetIdMap_Entry0 = new UpdateNetworkNotification.SubnetIdMap.Entry();
      updateNetworkNotification_SubnetIdMap_Entry0.setValue("");
      assertEquals("", updateNetworkNotification_SubnetIdMap_Entry0.getValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateNetworkNotification.SubnetIdMap.Entry updateNetworkNotification_SubnetIdMap_Entry0 = new UpdateNetworkNotification.SubnetIdMap.Entry();
      String string0 = updateNetworkNotification_SubnetIdMap_Entry0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateNetworkNotification.SubnetIdMap.Entry updateNetworkNotification_SubnetIdMap_Entry0 = new UpdateNetworkNotification.SubnetIdMap.Entry();
      String string0 = updateNetworkNotification_SubnetIdMap_Entry0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UpdateNetworkNotification.SubnetIdMap.Entry updateNetworkNotification_SubnetIdMap_Entry0 = new UpdateNetworkNotification.SubnetIdMap.Entry();
      updateNetworkNotification_SubnetIdMap_Entry0.setKey("F");
      assertEquals("F", updateNetworkNotification_SubnetIdMap_Entry0.getKey());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      UpdateNetworkNotification.SubnetIdMap updateNetworkNotification_SubnetIdMap0 = new UpdateNetworkNotification.SubnetIdMap();
      updateNetworkNotification0.setSubnetIdMap(updateNetworkNotification_SubnetIdMap0);
      assertFalse(updateNetworkNotification0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.getException();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.setMessageId("");
      assertEquals("", updateNetworkNotification0.getMessageId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      updateNetworkNotification0.setRollback((NetworkRollback) null);
      assertFalse(updateNetworkNotification0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      String string0 = updateNetworkNotification0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      boolean boolean0 = updateNetworkNotification0.isCompleted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      NetworkRollback networkRollback0 = updateNetworkNotification0.getRollback();
      assertNull(networkRollback0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      String string0 = updateNetworkNotification0.getMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      UpdateNetworkNotification.SubnetIdMap updateNetworkNotification_SubnetIdMap0 = updateNetworkNotification0.getSubnetIdMap();
      assertNull(updateNetworkNotification_SubnetIdMap0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UpdateNetworkNotification updateNetworkNotification0 = new UpdateNetworkNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.OPENSTACK;
      updateNetworkNotification0.setException(msoExceptionCategory0);
      assertNull(updateNetworkNotification0.getMessageId());
  }
}
