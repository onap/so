/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:47:44 GMT 2016
 */

package org.openecomp.mso.adapters.vnf.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class CreateVnfNotificationESTest extends CreateVnfNotificationESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.completed = true;
      boolean boolean0 = createVnfNotification0.isCompleted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.vnfId = "hxb7d^";
      String string0 = createVnfNotification0.getVnfId();
      assertEquals("hxb7d^", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.vnfId = "";
      String string0 = createVnfNotification0.getVnfId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setVnfCreated(true);
      createVnfNotification0.setRollback(vnfRollback0);
      VnfRollback vnfRollback1 = createVnfNotification0.getRollback();
      assertSame(vnfRollback1, vnfRollback0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      VnfRollback vnfRollback0 = new VnfRollback();
      createVnfNotification0.rollback = vnfRollback0;
      VnfRollback vnfRollback1 = createVnfNotification0.getRollback();
      assertFalse(vnfRollback1.isVnfCreated());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      CreateVnfNotification.Outputs createVnfNotification_Outputs0 = new CreateVnfNotification.Outputs();
      createVnfNotification0.outputs = createVnfNotification_Outputs0;
      CreateVnfNotification.Outputs createVnfNotification_Outputs1 = createVnfNotification0.getOutputs();
      assertSame(createVnfNotification_Outputs1, createVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.messageId = "org.openecomp.mso.adapters.vnf.async.client.MsoExceptionCategory";
      String string0 = createVnfNotification0.getMessageId();
      assertEquals("org.openecomp.mso.adapters.vnf.async.client.MsoExceptionCategory", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.OPENSTACK;
      createVnfNotification0.exception = msoExceptionCategory0;
      MsoExceptionCategory msoExceptionCategory1 = createVnfNotification0.getException();
      assertEquals(MsoExceptionCategory.OPENSTACK, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.errorMessage = "=(,wm";
      String string0 = createVnfNotification0.getErrorMessage();
      assertEquals("=(,wm", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateVnfNotification.Outputs createVnfNotification_Outputs0 = new CreateVnfNotification.Outputs();
      createVnfNotification_Outputs0.getEntry();
      List<CreateVnfNotification.Outputs.Entry> list0 = createVnfNotification_Outputs0.getEntry();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      CreateVnfNotification.Outputs createVnfNotification_Outputs0 = new CreateVnfNotification.Outputs();
      createVnfNotification0.setOutputs(createVnfNotification_Outputs0);
      assertNull(createVnfNotification0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      VnfRollback vnfRollback0 = createVnfNotification0.getRollback();
      assertNull(vnfRollback0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.OPENSTACK;
      createVnfNotification0.setException(msoExceptionCategory0);
      assertFalse(createVnfNotification0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      String string0 = createVnfNotification0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      CreateVnfNotification.Outputs createVnfNotification_Outputs0 = createVnfNotification0.getOutputs();
      assertNull(createVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.getException();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.setCompleted(false);
      assertFalse(createVnfNotification0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      String string0 = createVnfNotification0.getMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.setVnfId("N");
      assertNull(createVnfNotification0.getException());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.setErrorMessage("");
      String string0 = createVnfNotification0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      String string0 = createVnfNotification0.getVnfId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      createVnfNotification0.setMessageId("");
      String string0 = createVnfNotification0.getMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      boolean boolean0 = createVnfNotification0.isCompleted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CreateVnfNotification.Outputs.Entry createVnfNotification_Outputs_Entry0 = new CreateVnfNotification.Outputs.Entry();
      createVnfNotification_Outputs_Entry0.setValue("`)_fe1");
      assertNull(createVnfNotification_Outputs_Entry0.getKey());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CreateVnfNotification.Outputs.Entry createVnfNotification_Outputs_Entry0 = new CreateVnfNotification.Outputs.Entry();
      createVnfNotification_Outputs_Entry0.setKey("");
      assertEquals("", createVnfNotification_Outputs_Entry0.getKey());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CreateVnfNotification.Outputs.Entry createVnfNotification_Outputs_Entry0 = new CreateVnfNotification.Outputs.Entry();
      String string0 = createVnfNotification_Outputs_Entry0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CreateVnfNotification.Outputs.Entry createVnfNotification_Outputs_Entry0 = new CreateVnfNotification.Outputs.Entry();
      String string0 = createVnfNotification_Outputs_Entry0.getKey();
      assertNull(string0);
  }
}
