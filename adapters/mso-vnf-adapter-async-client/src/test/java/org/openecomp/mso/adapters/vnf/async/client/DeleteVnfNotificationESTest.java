/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:48:02 GMT 2016
 */

package org.openecomp.mso.adapters.vnf.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class DeleteVnfNotificationESTest extends DeleteVnfNotificationESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.setCompleted(true);
      boolean boolean0 = deleteVnfNotification0.isCompleted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.messageId = "H\"7~I/-7S[";
      String string0 = deleteVnfNotification0.getMessageId();
      assertEquals("H\"7~I/-7S[", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.messageId = "";
      String string0 = deleteVnfNotification0.getMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.USERDATA;
      deleteVnfNotification0.exception = msoExceptionCategory0;
      MsoExceptionCategory msoExceptionCategory1 = deleteVnfNotification0.getException();
      assertEquals(MsoExceptionCategory.USERDATA, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.errorMessage = "";
      deleteVnfNotification0.errorMessage = "H\"7~I/-7S[";
      String string0 = deleteVnfNotification0.getErrorMessage();
      assertEquals("H\"7~I/-7S[", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.setErrorMessage("");
      String string0 = deleteVnfNotification0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      boolean boolean0 = deleteVnfNotification0.isCompleted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.getException();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      String string0 = deleteVnfNotification0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      String string0 = deleteVnfNotification0.getMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      deleteVnfNotification0.setMessageId("Jl^?zBSSPj<c<rl");
      assertEquals("Jl^?zBSSPj<c<rl", deleteVnfNotification0.getMessageId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      MsoExceptionCategory msoExceptionCategory0 = deleteVnfNotification0.exception;
      deleteVnfNotification0.setException(msoExceptionCategory0);
      assertNull(deleteVnfNotification0.getErrorMessage());
  }
}
