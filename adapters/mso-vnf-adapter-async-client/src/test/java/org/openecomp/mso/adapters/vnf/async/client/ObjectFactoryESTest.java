/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:50:08 GMT 2016
 */

package org.openecomp.mso.adapters.vnf.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import javax.xml.bind.JAXBElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class ObjectFactoryESTest extends ObjectFactoryESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      CreateVnfNotification createVnfNotification0 = objectFactory0.createCreateVnfNotification();
      assertNull(createVnfNotification0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      JAXBElement<UpdateVnfNotification> jAXBElement0 = objectFactory0.createUpdateVnfNotification(updateVnfNotification0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      QueryVnfNotification queryVnfNotification0 = objectFactory0.createQueryVnfNotification();
      assertNull(queryVnfNotification0.getException());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      MsoRequest msoRequest0 = objectFactory0.createMsoRequest();
      assertNull(msoRequest0.getServiceInstanceId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      CreateVnfNotification createVnfNotification0 = new CreateVnfNotification();
      JAXBElement<CreateVnfNotification> jAXBElement0 = objectFactory0.createCreateVnfNotification(createVnfNotification0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      VnfRollback vnfRollback0 = objectFactory0.createVnfRollback();
      assertNull(vnfRollback0.getTenantId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DeleteVnfNotification deleteVnfNotification0 = new DeleteVnfNotification();
      JAXBElement<DeleteVnfNotification> jAXBElement0 = objectFactory0.createDeleteVnfNotification(deleteVnfNotification0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      UpdateVnfNotification.Outputs.Entry updateVnfNotification_Outputs_Entry0 = objectFactory0.createUpdateVnfNotificationOutputsEntry();
      assertNull(updateVnfNotification_Outputs_Entry0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      CreateVnfNotification.Outputs createVnfNotification_Outputs0 = objectFactory0.createCreateVnfNotificationOutputs();
      assertNotNull(createVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      UpdateVnfNotification updateVnfNotification0 = objectFactory0.createUpdateVnfNotification();
      assertNull(updateVnfNotification0.getMessageId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      UpdateVnfNotification.Outputs updateVnfNotification_Outputs0 = objectFactory0.createUpdateVnfNotificationOutputs();
      assertNotNull(updateVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      CreateVnfNotification.Outputs.Entry createVnfNotification_Outputs_Entry0 = objectFactory0.createCreateVnfNotificationOutputsEntry();
      assertNull(createVnfNotification_Outputs_Entry0.getKey());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DeleteVnfNotification deleteVnfNotification0 = objectFactory0.createDeleteVnfNotification();
      assertNull(deleteVnfNotification0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      QueryVnfNotification.Outputs queryVnfNotification_Outputs0 = objectFactory0.createQueryVnfNotificationOutputs();
      assertNotNull(queryVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      RollbackVnfNotification rollbackVnfNotification0 = objectFactory0.createRollbackVnfNotification();
      JAXBElement<RollbackVnfNotification> jAXBElement0 = objectFactory0.createRollbackVnfNotification(rollbackVnfNotification0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      QueryVnfNotification queryVnfNotification0 = new QueryVnfNotification();
      JAXBElement<QueryVnfNotification> jAXBElement0 = objectFactory0.createQueryVnfNotification(queryVnfNotification0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      QueryVnfNotification.Outputs.Entry queryVnfNotification_Outputs_Entry0 = objectFactory0.createQueryVnfNotificationOutputsEntry();
      assertNull(queryVnfNotification_Outputs_Entry0.getValue());
  }
}
