/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:51:15 GMT 2016
 */

package org.openecomp.mso.adapters.vnf.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class UpdateVnfNotificationESTest extends UpdateVnfNotificationESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.tenantCreated = true;
      updateVnfNotification0.setRollback(vnfRollback0);
      VnfRollback vnfRollback1 = updateVnfNotification0.getRollback();
      assertNull(vnfRollback1.getTenantId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      VnfRollback vnfRollback0 = new VnfRollback();
      updateVnfNotification0.rollback = vnfRollback0;
      VnfRollback vnfRollback1 = updateVnfNotification0.getRollback();
      assertFalse(vnfRollback1.isTenantCreated());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      UpdateVnfNotification.Outputs updateVnfNotification_Outputs0 = new UpdateVnfNotification.Outputs();
      updateVnfNotification0.setOutputs(updateVnfNotification_Outputs0);
      UpdateVnfNotification.Outputs updateVnfNotification_Outputs1 = updateVnfNotification0.getOutputs();
      assertSame(updateVnfNotification_Outputs1, updateVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      updateVnfNotification0.messageId = ":_rGAeg9'Jf17.p+,m";
      String string0 = updateVnfNotification0.getMessageId();
      assertEquals(":_rGAeg9'Jf17.p+,m", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      updateVnfNotification0.setMessageId("");
      String string0 = updateVnfNotification0.getMessageId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      updateVnfNotification0.exception = msoExceptionCategory0;
      MsoExceptionCategory msoExceptionCategory1 = updateVnfNotification0.getException();
      assertEquals(MsoExceptionCategory.IO, msoExceptionCategory1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      updateVnfNotification0.errorMessage = null;
      updateVnfNotification0.errorMessage = "";
      String string0 = updateVnfNotification0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      VnfRollback vnfRollback0 = updateVnfNotification0.getRollback();
      assertNull(vnfRollback0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      boolean boolean0 = updateVnfNotification0.isCompleted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      updateVnfNotification0.getException();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      String string0 = updateVnfNotification0.getMessageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      MsoExceptionCategory msoExceptionCategory0 = MsoExceptionCategory.IO;
      updateVnfNotification0.setException(msoExceptionCategory0);
      assertEquals(MsoExceptionCategory.IO, updateVnfNotification0.getException());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      updateVnfNotification0.setCompleted(true);
      boolean boolean0 = updateVnfNotification0.isCompleted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      UpdateVnfNotification.Outputs updateVnfNotification_Outputs0 = updateVnfNotification0.getOutputs();
      assertNull(updateVnfNotification_Outputs0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      updateVnfNotification0.setErrorMessage("m.m)#ZJF);)x*\"HQ8WB");
      String string0 = updateVnfNotification0.getErrorMessage();
      assertEquals("m.m)#ZJF);)x*\"HQ8WB", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UpdateVnfNotification updateVnfNotification0 = new UpdateVnfNotification();
      String string0 = updateVnfNotification0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UpdateVnfNotification.Outputs updateVnfNotification_Outputs0 = new UpdateVnfNotification.Outputs();
      List<UpdateVnfNotification.Outputs.Entry> list0 = updateVnfNotification_Outputs0.getEntry();
      List<UpdateVnfNotification.Outputs.Entry> list1 = updateVnfNotification_Outputs0.getEntry();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpdateVnfNotification.Outputs.Entry updateVnfNotification_Outputs_Entry0 = new UpdateVnfNotification.Outputs.Entry();
      updateVnfNotification_Outputs_Entry0.setKey(",");
      assertEquals(",", updateVnfNotification_Outputs_Entry0.getKey());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UpdateVnfNotification.Outputs.Entry updateVnfNotification_Outputs_Entry0 = new UpdateVnfNotification.Outputs.Entry();
      String string0 = updateVnfNotification_Outputs_Entry0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UpdateVnfNotification.Outputs.Entry updateVnfNotification_Outputs_Entry0 = new UpdateVnfNotification.Outputs.Entry();
      updateVnfNotification_Outputs_Entry0.setValue("IO");
      assertNull(updateVnfNotification_Outputs_Entry0.getKey());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UpdateVnfNotification.Outputs.Entry updateVnfNotification_Outputs_Entry0 = new UpdateVnfNotification.Outputs.Entry();
      String string0 = updateVnfNotification_Outputs_Entry0.getKey();
      assertNull(string0);
  }
}
