/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 10:50:26 GMT 2016
 */

package org.openecomp.mso.adapters.vnf.async.client;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class VnfRollbackESTest extends VnfRollbackESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setVnfId("12&$HOD'rH:!tJy");
      String string0 = vnfRollback0.getVnfId();
      assertEquals("12&$HOD'rH:!tJy", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.vnfId = "";
      String string0 = vnfRollback0.getVnfId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.tenantId = "=x@lXzB:nqB-5F9";
      String string0 = vnfRollback0.getTenantId();
      assertEquals("=x@lXzB:nqB-5F9", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      MsoRequest msoRequest0 = new MsoRequest();
      vnfRollback0.setMsoRequest(msoRequest0);
      MsoRequest msoRequest1 = vnfRollback0.getMsoRequest();
      assertNull(msoRequest1.getServiceInstanceId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setCloudSiteId("/8Qc+9]");
      String string0 = vnfRollback0.getCloudSiteId();
      assertEquals("/8Qc+9]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setTenantCreated(true);
      boolean boolean0 = vnfRollback0.isTenantCreated();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      boolean boolean0 = vnfRollback0.isTenantCreated();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      String string0 = vnfRollback0.getVnfId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      MsoRequest msoRequest0 = vnfRollback0.getMsoRequest();
      assertNull(msoRequest0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setVnfCreated(true);
      boolean boolean0 = vnfRollback0.isVnfCreated();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      boolean boolean0 = vnfRollback0.isVnfCreated();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setCloudSiteId("");
      String string0 = vnfRollback0.getCloudSiteId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      vnfRollback0.setTenantId("");
      String string0 = vnfRollback0.getTenantId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      String string0 = vnfRollback0.getCloudSiteId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VnfRollback vnfRollback0 = new VnfRollback();
      String string0 = vnfRollback0.getTenantId();
      assertNull(string0);
  }
}
