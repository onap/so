/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 25 13:39:00 GMT 2016
 */

package org.openecomp.mso.asdc.client;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.openecomp.sdc.utils.DistributionStatusEnum;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class DistributionStatusMessageESTest extends DistributionStatusMessageESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, distributionStatusEnum0, 1L);
      long long0 = distributionStatusMessage0.getTimestamp();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DEPLOYED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage("n*lho0\"NQ4azb%8]KN", "n*lho0\"NQ4azb%8]KN", "BMWmXl2i-B", distributionStatusEnum0, (-58L));
      long long0 = distributionStatusMessage0.getTimestamp();
      assertEquals("BMWmXl2i-B", distributionStatusMessage0.getDistributionID());
      assertEquals((-58L), long0);
      assertEquals("n*lho0\"NQ4azb%8]KN", distributionStatusMessage0.getConsumerID());
      assertEquals("n*lho0\"NQ4azb%8]KN", distributionStatusMessage0.getArtifactURL());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, distributionStatusEnum0, 1L);
      DistributionStatusEnum distributionStatusEnum1 = distributionStatusMessage0.getStatus();
      DistributionStatusMessage distributionStatusMessage1 = new DistributionStatusMessage("", (String) null, "*? q^M(_q^3$ZQ", distributionStatusEnum1, (-833L));
      String string0 = distributionStatusMessage1.getDistributionID();
      assertNotNull(string0);
      assertEquals((-833L), distributionStatusMessage1.getTimestamp());
      assertEquals("", distributionStatusMessage1.getArtifactURL());
      assertEquals("*? q^M(_q^3$ZQ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage("", "", "", distributionStatusEnum0, 1L);
      distributionStatusMessage0.getDistributionID();
      assertEquals(1L, distributionStatusMessage0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage("ALREADY_DEPLOYED", "ALREADY_DEPLOYED", "ALREADY_DEPLOYED", distributionStatusEnum0, 0L);
      String string0 = distributionStatusMessage0.getConsumerID();
      assertEquals("ALREADY_DEPLOYED", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, distributionStatusEnum0, 1L);
      DistributionStatusEnum distributionStatusEnum1 = distributionStatusMessage0.getStatus();
      DistributionStatusMessage distributionStatusMessage1 = new DistributionStatusMessage((String) null, "", "Qcuo3~gd})vsI*", distributionStatusEnum1, 0L);
      String string0 = distributionStatusMessage1.getConsumerID();
      assertNotNull(string0);
      assertEquals(1L, distributionStatusMessage0.getTimestamp());
      assertEquals("", string0);
      assertEquals("Qcuo3~gd})vsI*", distributionStatusMessage1.getDistributionID());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage("ALREADY_DEPLOYED", "ALREADY_DEPLOYED", "ALREADY_DEPLOYED", distributionStatusEnum0, 0L);
      String string0 = distributionStatusMessage0.getArtifactURL();
      assertEquals("ALREADY_DEPLOYED", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DistributionStatusEnum distributionStatusEnum0 = DistributionStatusEnum.ALREADY_DOWNLOADED;
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, distributionStatusEnum0, 1L);
      DistributionStatusEnum distributionStatusEnum1 = distributionStatusMessage0.getStatus();
      DistributionStatusMessage distributionStatusMessage1 = new DistributionStatusMessage("", (String) null, "*? q^M(_q^3$ZQ", distributionStatusEnum1, (-833L));
      String string0 = distributionStatusMessage1.getArtifactURL();
      assertEquals("", string0);
      assertEquals("*? q^M(_q^3$ZQ", distributionStatusMessage1.getDistributionID());
      assertNotNull(string0);
      assertEquals((-833L), distributionStatusMessage1.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, (DistributionStatusEnum) null, 0L);
      long long0 = distributionStatusMessage0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, (DistributionStatusEnum) null, 0L);
      String string0 = distributionStatusMessage0.getDistributionID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, (DistributionStatusEnum) null, 0L);
      distributionStatusMessage0.getStatus();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, (DistributionStatusEnum) null, 0L);
      String string0 = distributionStatusMessage0.getConsumerID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DistributionStatusMessage distributionStatusMessage0 = new DistributionStatusMessage((String) null, (String) null, (String) null, (DistributionStatusEnum) null, 0L);
      String string0 = distributionStatusMessage0.getArtifactURL();
      assertNull(string0);
  }
}
