/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 25 13:31:27 GMT 2016
 */

package org.openecomp.mso.asdc.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;

import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.openecomp.sdc.api.notification.IArtifactInfo;
import org.openecomp.sdc.api.notification.INotificationData;
import org.openecomp.sdc.api.notification.IResourceInstance;
import org.openecomp.sdc.api.notification.IVfModuleMetadata;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class ASDCNotificationLoggingESTest extends ASDCNotificationLoggingESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      LinkedList<IResourceInstance> linkedList0 = new LinkedList<IResourceInstance>();
      LinkedList<IArtifactInfo> linkedList1 = new LinkedList<IArtifactInfo>();
      Integer integer0 = new Integer(2147483645);
      Integer integer1 = new Integer(2147483645);
      Integer integer2 = new Integer(2147483645);
      IArtifactInfo iArtifactInfo0 = mock(IArtifactInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iArtifactInfo0).getArtifactChecksum();
      doReturn((String) null).when(iArtifactInfo0).getArtifactDescription();
      doReturn((String) null).when(iArtifactInfo0).getArtifactName();
      doReturn((Integer) null).when(iArtifactInfo0).getArtifactTimeout();
      doReturn((String) null).when(iArtifactInfo0).getArtifactType();
      doReturn((String) null).when(iArtifactInfo0).getArtifactURL();
      doReturn((String) null).when(iArtifactInfo0).getArtifactUUID();
      doReturn((String) null).when(iArtifactInfo0).getArtifactVersion();
      doReturn((IArtifactInfo) null).when(iArtifactInfo0).getGeneratedArtifact();
      doReturn((List) null).when(iArtifactInfo0).getRelatedArtifacts();
      IArtifactInfo iArtifactInfo1 = mock(IArtifactInfo.class, new ViolatedAssumptionAnswer());
      doReturn("Resource Instance Info:").when(iArtifactInfo1).getArtifactChecksum();
      doReturn("~1xF'ZQr|qhuc{").when(iArtifactInfo1).getArtifactDescription();
      doReturn("").when(iArtifactInfo1).getArtifactName();
      doReturn(integer1).when(iArtifactInfo1).getArtifactTimeout();
      doReturn("7<\"g").when(iArtifactInfo1).getArtifactType();
      doReturn("").when(iArtifactInfo1).getArtifactURL();
      doReturn("").when(iArtifactInfo1).getArtifactUUID();
      doReturn("7<\"g").when(iArtifactInfo1).getArtifactVersion();
      doReturn(iArtifactInfo0).when(iArtifactInfo1).getGeneratedArtifact();
      doReturn(linkedList1, linkedList1).when(iArtifactInfo1).getRelatedArtifacts();
      LinkedList<IArtifactInfo> linkedList2 = new LinkedList<IArtifactInfo>();
      Integer integer3 = new Integer(1);
      LinkedList<IArtifactInfo> linkedList3 = new LinkedList<IArtifactInfo>();
      IArtifactInfo iArtifactInfo2 = mock(IArtifactInfo.class, new ViolatedAssumptionAnswer());
      doReturn("-X^ og(1=?-*/%4", "%jgpj", (String) null).when(iArtifactInfo2).getArtifactChecksum();
      doReturn("7<\"g", "", (String) null).when(iArtifactInfo2).getArtifactDescription();
      doReturn("7 'W{]65Y%Vh_ynFOr", "]+O?<_o+Mx?P@|^<:|/", (String) null).when(iArtifactInfo2).getArtifactName();
      doReturn(integer0, integer3, (Integer) null).when(iArtifactInfo2).getArtifactTimeout();
      doReturn("]+O?<_o+Mx?P@|^<:|/", "", (String) null).when(iArtifactInfo2).getArtifactType();
      doReturn("i]\r7Wr. <gStwjW", "Ns3ZUZX(", (String) null).when(iArtifactInfo2).getArtifactURL();
      doReturn("7 'W{]65Y%Vh_ynFOr", "7<\"g", (String) null).when(iArtifactInfo2).getArtifactUUID();
      doReturn("7 'W{]65Y%Vh_ynFOr", "YuS7'", (String) null).when(iArtifactInfo2).getArtifactVersion();
      doReturn(iArtifactInfo1, (IArtifactInfo) null, (IArtifactInfo) null).when(iArtifactInfo2).getGeneratedArtifact();
      doReturn(linkedList2, linkedList2, linkedList3, linkedList3, (List) null).when(iArtifactInfo2).getRelatedArtifacts();
      linkedList1.add(iArtifactInfo2);
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("~1xF'ZQr|qhuc{").when(iNotificationData0).getDistributionID();
      doReturn(linkedList0, linkedList0).when(iNotificationData0).getResources();
      doReturn(linkedList1).when(iNotificationData0).getServiceArtifacts();
      doReturn("").when(iNotificationData0).getServiceDescription();
      doReturn("").when(iNotificationData0).getServiceInvariantUUID();
      doReturn("").when(iNotificationData0).getServiceName();
      doReturn("").when(iNotificationData0).getServiceUUID();
      doReturn("TvEm!").when(iNotificationData0).getServiceVersion();
      String string0 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData1).getDistributionID();
      doReturn(linkedList0, linkedList0).when(iNotificationData1).getResources();
      doReturn(linkedList1).when(iNotificationData1).getServiceArtifacts();
      doReturn("").when(iNotificationData1).getServiceDescription();
      doReturn("Tz)|, ,").when(iNotificationData1).getServiceInvariantUUID();
      doReturn("").when(iNotificationData1).getServiceName();
      doReturn("").when(iNotificationData1).getServiceUUID();
      doReturn("Tz)|, ,").when(iNotificationData1).getServiceVersion();
      String string1 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.add(iVfModuleMetadata0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Object object0 = new Object();
      linkedList1.push(object0);
      linkedList0.spliterator();
      linkedList0.removeAll(linkedList1);
      linkedList0.clear();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      IVfModuleMetadata iVfModuleMetadata1 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      doReturn((List<String>) null, (List<String>) null, linkedList2, (List<String>) null).when(iVfModuleMetadata1).getArtifacts();
      doReturn("e.tf%6&", "e.tf%6&", "").when(iVfModuleMetadata1).getVfModuleModelDescription();
      doReturn("", "", "").when(iVfModuleMetadata1).getVfModuleModelInvariantUUID();
      doReturn("", "", "e.tf%6&").when(iVfModuleMetadata1).getVfModuleModelName();
      doReturn("VfModuleMetaData:", "e.tf%6&", "BaseArtifactInfoImpl [artifactName=").when(iVfModuleMetadata1).getVfModuleModelUUID();
      doReturn("e.tf%6&", "e.tf%6&", "e.tf%6&").when(iVfModuleMetadata1).getVfModuleModelVersion();
      doReturn(false, false).when(iVfModuleMetadata1).isBase();
      linkedList0.add(iVfModuleMetadata1);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      // Undeclared exception!
      try { 
        ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.asdc.util.ASDCNotificationLogging", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      ASDCNotificationLogging aSDCNotificationLogging1 = new ASDCNotificationLogging();
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      doReturn((List<String>) null, (List<String>) null).when(iVfModuleMetadata0).getArtifacts();
      doReturn("TTq", (String) null).when(iVfModuleMetadata0).getVfModuleModelDescription();
      doReturn("", (String) null).when(iVfModuleMetadata0).getVfModuleModelInvariantUUID();
      doReturn("w1e~\"rjNBjuq*0HB!3&", (String) null).when(iVfModuleMetadata0).getVfModuleModelName();
      doReturn("+l", (String) null).when(iVfModuleMetadata0).getVfModuleModelUUID();
      doReturn("]", (String) null).when(iVfModuleMetadata0).getVfModuleModelVersion();
      doReturn(true, false).when(iVfModuleMetadata0).isBase();
      linkedList0.add(iVfModuleMetadata0);
      IVfModuleMetadata iVfModuleMetadata1 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.removeFirstOccurrence(aSDCNotificationLogging1);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      String string0 = ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      assertEquals("{\nVfModuleMetaData:\nVfModuleModelName:NULL\nVfModuleModelVersion:NULL\nVfModuleModelUUID:NULL\nVfModuleModelInvariantUUID:NULL\nVfModuleModelDescription:NULL\nArtifacts UUID List:NULL\nisBase:false\n\n\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      List<IResourceInstance> list0 = (List<IResourceInstance>) mock(List.class, new ViolatedAssumptionAnswer());
      List<IArtifactInfo> list1 = (List<IArtifactInfo>) mock(List.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(list1).isEmpty();
      doReturn((Iterator) null).when(list1).iterator();
      doReturn(0).when(list1).size();
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData0).getDistributionID();
      doReturn(list1).when(iNotificationData0).getServiceArtifacts();
      doReturn("9").when(iNotificationData0).getServiceDescription();
      doReturn("9").when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn("Type not recognized").when(iNotificationData0).getServiceUUID();
      doReturn("").when(iNotificationData0).getServiceVersion();
      // Undeclared exception!
      try { 
        ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.asdc.util.ASDCNotificationLogging", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<IResourceInstance> linkedList0 = new LinkedList<IResourceInstance>();
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("(ICU8j3G)Z4Z[GAE").when(iNotificationData0).getDistributionID();
      doReturn(linkedList0, linkedList0).when(iNotificationData0).getResources();
      doReturn((List<IArtifactInfo>) null).when(iNotificationData0).getServiceArtifacts();
      doReturn(")&42fB6dZT&HRAb1a").when(iNotificationData0).getServiceDescription();
      doReturn("(ICU8j3G)Z4Z[GAE").when(iNotificationData0).getServiceInvariantUUID();
      doReturn(")&42fB6dZT&HRAb1a").when(iNotificationData0).getServiceName();
      doReturn(")&42fB6dZT&HRAb1a").when(iNotificationData0).getServiceUUID();
      doReturn("cHH N9Ha9YUPSpX00i").when(iNotificationData0).getServiceVersion();
      String string0 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      assertEquals("ASDC Notification:\nDistributionID:(ICU8j3G)Z4Z[GAE\nServiceName:)&42fB6dZT&HRAb1a\nServiceVersion:cHH N9Ha9YUPSpX00i\nServiceUUID:)&42fB6dZT&HRAb1a\nServiceInvariantUUID:(ICU8j3G)Z4Z[GAE\nServiceDescription:)&42fB6dZT&HRAb1a\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      assertEquals(0, linkedList0.size());
      
      LinkedList<String> linkedList1 = new LinkedList<String>();
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList1, linkedList1).when(iVfModuleMetadata0).getArtifacts();
      doReturn(", artifactTimeout=").when(iVfModuleMetadata0).getVfModuleModelDescription();
      doReturn(", artifactChecksum=").when(iVfModuleMetadata0).getVfModuleModelInvariantUUID();
      doReturn(", artifactTimeout=").when(iVfModuleMetadata0).getVfModuleModelName();
      doReturn(", artifactTimeout=").when(iVfModuleMetadata0).getVfModuleModelUUID();
      doReturn(", artifactTimeout=").when(iVfModuleMetadata0).getVfModuleModelVersion();
      doReturn(false).when(iVfModuleMetadata0).isBase();
      IVfModuleMetadata iVfModuleMetadata1 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.add(iVfModuleMetadata1);
      linkedList1.push("dzjz-zmMzFE");
      linkedList0.listIterator();
      linkedList0.toArray();
      linkedList0.add(iVfModuleMetadata0);
      linkedList0.pollFirst();
      String string0 = ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      assertEquals("{\nVfModuleMetaData:\nVfModuleModelName:, artifactTimeout=\nVfModuleModelVersion:, artifactTimeout=\nVfModuleModelUUID:, artifactTimeout=\nVfModuleModelInvariantUUID:, artifactChecksum=\nVfModuleModelDescription:, artifactTimeout=\nArtifacts UUID List:{\ndzjz-zmMzFE\n\n}\n\nisBase:false\n\n\n}\n", string0);
      
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      LinkedList<IResourceInstance> linkedList2 = new LinkedList<IResourceInstance>();
      LinkedList<IResourceInstance> linkedList3 = new LinkedList<IResourceInstance>((Collection<? extends IResourceInstance>) linkedList2);
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData0).getDistributionID();
      doReturn((List) null).when(iNotificationData0).getResources();
      doReturn((List) null).when(iNotificationData0).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn((String) null).when(iNotificationData0).getServiceUUID();
      doReturn((String) null).when(iNotificationData0).getServiceVersion();
      String string1 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      assertEquals("ASDC Notification:\nDistributionID:NULL\nServiceName:NULL\nServiceVersion:NULL\nServiceUUID:NULL\nServiceInvariantUUID:NULL\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\nNULL\n", string1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData0).getDistributionID();
      doReturn((List) null).when(iNotificationData0).getResources();
      doReturn((List) null).when(iNotificationData0).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn((String) null).when(iNotificationData0).getServiceUUID();
      doReturn((String) null).when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      List<IVfModuleMetadata> list0 = linkedList0.subList(0, 0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      linkedList0.removeAll(list0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.offerLast(iVfModuleMetadata0);
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData1).getDistributionID();
      doReturn((List) null).when(iNotificationData1).getResources();
      doReturn((List) null).when(iNotificationData1).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData1).getServiceDescription();
      doReturn((String) null).when(iNotificationData1).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData1).getServiceName();
      doReturn((String) null).when(iNotificationData1).getServiceUUID();
      doReturn((String) null).when(iNotificationData1).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      // Undeclared exception!
      try { 
        ASDCNotificationLogging.dumpVfModuleMetaDataList(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      ASDCNotificationLogging aSDCNotificationLogging1 = new ASDCNotificationLogging();
      LinkedList<IResourceInstance> linkedList0 = new LinkedList<IResourceInstance>();
      LinkedList<IArtifactInfo> linkedList1 = new LinkedList<IArtifactInfo>();
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("ResourceInstanceName:").when(iNotificationData0).getDistributionID();
      doReturn(linkedList0, linkedList0).when(iNotificationData0).getResources();
      doReturn(linkedList1).when(iNotificationData0).getServiceArtifacts();
      doReturn("ResourceInstanceName:").when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn("ResourceInstanceName:").when(iNotificationData0).getServiceName();
      doReturn("pr26M0Ud8~n6#j/;g").when(iNotificationData0).getServiceUUID();
      doReturn((String) null).when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      ASDCNotificationLogging aSDCNotificationLogging2 = new ASDCNotificationLogging();
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("ResourceInstanceName:").when(iNotificationData1).getDistributionID();
      doReturn(linkedList0, linkedList0).when(iNotificationData1).getResources();
      doReturn(linkedList1).when(iNotificationData1).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData1).getServiceDescription();
      doReturn("").when(iNotificationData1).getServiceInvariantUUID();
      doReturn("pr26M0Ud8~n6#j/;g").when(iNotificationData1).getServiceName();
      doReturn("").when(iNotificationData1).getServiceUUID();
      doReturn("Resource Artifacts List:").when(iNotificationData1).getServiceVersion();
      String string0 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      assertEquals("ASDC Notification:\nDistributionID:ResourceInstanceName:\nServiceName:pr26M0Ud8~n6#j/;g\nServiceVersion:Resource Artifacts List:\nServiceUUID:\nServiceInvariantUUID:\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n", string0);
      
      ASDCNotificationLogging aSDCNotificationLogging3 = new ASDCNotificationLogging();
      LinkedList<IVfModuleMetadata> linkedList2 = new LinkedList<IVfModuleMetadata>();
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList2);
      LinkedList<IResourceInstance> linkedList3 = new LinkedList<IResourceInstance>();
      IArtifactInfo iArtifactInfo0 = mock(IArtifactInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactChecksum();
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactDescription();
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactName();
      doReturn((Integer) null, (Integer) null, (Integer) null).when(iArtifactInfo0).getArtifactTimeout();
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactType();
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactURL();
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactUUID();
      doReturn((String) null, (String) null, (String) null).when(iArtifactInfo0).getArtifactVersion();
      doReturn((IArtifactInfo) null, (IArtifactInfo) null, (IArtifactInfo) null).when(iArtifactInfo0).getGeneratedArtifact();
      doReturn((List) null, (List) null, (List) null).when(iArtifactInfo0).getRelatedArtifacts();
      linkedList1.add(iArtifactInfo0);
      INotificationData iNotificationData2 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("tlh7ku").when(iNotificationData2).getDistributionID();
      doReturn(linkedList3, linkedList0).when(iNotificationData2).getResources();
      doReturn(linkedList1).when(iNotificationData2).getServiceArtifacts();
      doReturn("").when(iNotificationData2).getServiceDescription();
      doReturn("").when(iNotificationData2).getServiceInvariantUUID();
      doReturn("tlh7ku").when(iNotificationData2).getServiceName();
      doReturn("_B4BTx//Er%IWM}et0").when(iNotificationData2).getServiceUUID();
      doReturn("").when(iNotificationData2).getServiceVersion();
      IResourceInstance iResourceInstance0 = mock(IResourceInstance.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList1).when(iResourceInstance0).getArtifacts();
      doReturn("").when(iResourceInstance0).getResourceInstanceName();
      doReturn("Resource Artifacts List:").when(iResourceInstance0).getResourceInvariantUUID();
      doReturn("Hq^8Xl<>T").when(iResourceInstance0).getResourceName();
      doReturn((String) null).when(iResourceInstance0).getResourceType();
      doReturn("ASDC Notification:\nDistributionID:ResourceInstanceName:\nServiceName:ResourceInstanceName:\nServiceVersion:NULL\nServiceUUID:pr26M0Ud8~n6#j/;g\nServiceInvariantUUID:NULL\nServiceDescription:ResourceInstanceName:\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n").when(iResourceInstance0).getResourceUUID();
      doReturn("zIQ?4(U$K ").when(iResourceInstance0).getResourceVersion();
      linkedList0.add(iResourceInstance0);
      IResourceInstance iResourceInstance1 = mock(IResourceInstance.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList1).when(iResourceInstance1).getArtifacts();
      doReturn("ASDC Notification:\nDistributionID:ResourceInstanceName:\nServiceName:pr26M0Ud8~n6#j/;g\nServiceVersion:Resource Artifacts List:\nServiceUUID:\nServiceInvariantUUID:\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n").when(iResourceInstance1).getResourceInstanceName();
      doReturn("5yNU;|<:T-ixwLB").when(iResourceInstance1).getResourceInvariantUUID();
      doReturn("").when(iResourceInstance1).getResourceName();
      doReturn("xguM[yK-\"").when(iResourceInstance1).getResourceType();
      doReturn("").when(iResourceInstance1).getResourceUUID();
      doReturn("ASDC Notification:\nDistributionID:ResourceInstanceName:\nServiceName:pr26M0Ud8~n6#j/;g\nServiceVersion:Resource Artifacts List:\nServiceUUID:\nServiceInvariantUUID:\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n").when(iResourceInstance1).getResourceVersion();
      linkedList1.removeFirstOccurrence((Object) null);
      linkedList0.add(iResourceInstance1);
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData2);
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      String string1 = ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList2);
      assertEquals("\n}\n", string1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData0).getDistributionID();
      doReturn((List) null).when(iNotificationData0).getResources();
      doReturn((List) null).when(iNotificationData0).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn((String) null).when(iNotificationData0).getServiceUUID();
      doReturn((String) null).when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData1).getDistributionID();
      doReturn((List) null).when(iNotificationData1).getResources();
      doReturn((List) null).when(iNotificationData1).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData1).getServiceDescription();
      doReturn((String) null).when(iNotificationData1).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData1).getServiceName();
      doReturn((String) null).when(iNotificationData1).getServiceUUID();
      doReturn((String) null).when(iNotificationData1).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      INotificationData iNotificationData2 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData2).getDistributionID();
      doReturn((List) null).when(iNotificationData2).getResources();
      doReturn((List) null).when(iNotificationData2).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData2).getServiceDescription();
      doReturn((String) null).when(iNotificationData2).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData2).getServiceName();
      doReturn((String) null).when(iNotificationData2).getServiceUUID();
      doReturn((String) null).when(iNotificationData2).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData2);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      INotificationData iNotificationData3 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData3).getDistributionID();
      doReturn((List) null).when(iNotificationData3).getResources();
      doReturn((List) null).when(iNotificationData3).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData3).getServiceDescription();
      doReturn((String) null).when(iNotificationData3).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData3).getServiceName();
      doReturn((String) null).when(iNotificationData3).getServiceUUID();
      doReturn((String) null).when(iNotificationData3).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData3);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      INotificationData iNotificationData4 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData4).getDistributionID();
      doReturn((List) null).when(iNotificationData4).getResources();
      doReturn((List) null).when(iNotificationData4).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData4).getServiceDescription();
      doReturn((String) null).when(iNotificationData4).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData4).getServiceName();
      doReturn((String) null).when(iNotificationData4).getServiceUUID();
      doReturn((String) null).when(iNotificationData4).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData4);
      INotificationData iNotificationData5 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData5).getDistributionID();
      doReturn((List) null).when(iNotificationData5).getResources();
      doReturn((List) null).when(iNotificationData5).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData5).getServiceDescription();
      doReturn((String) null).when(iNotificationData5).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData5).getServiceName();
      doReturn((String) null).when(iNotificationData5).getServiceUUID();
      doReturn((String) null).when(iNotificationData5).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData5);
      INotificationData iNotificationData6 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData6).getDistributionID();
      doReturn((List) null).when(iNotificationData6).getResources();
      doReturn((List) null).when(iNotificationData6).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData6).getServiceDescription();
      doReturn((String) null).when(iNotificationData6).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData6).getServiceName();
      doReturn((String) null).when(iNotificationData6).getServiceUUID();
      doReturn((String) null).when(iNotificationData6).getServiceVersion();
      String string0 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData6);
      assertEquals("ASDC Notification:\nDistributionID:NULL\nServiceName:NULL\nServiceVersion:NULL\nServiceUUID:NULL\nServiceInvariantUUID:NULL\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\nNULL\n", string0);
      
      ASDCNotificationLogging.dumpASDCNotification((INotificationData) null);
      String string1 = ASDCNotificationLogging.dumpASDCNotification((INotificationData) null);
      assertEquals("NULL", string1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      LinkedList<IArtifactInfo> linkedList0 = new LinkedList<IArtifactInfo>();
      IArtifactInfo iArtifactInfo0 = mock(IArtifactInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iArtifactInfo0).getArtifactChecksum();
      doReturn((String) null).when(iArtifactInfo0).getArtifactDescription();
      doReturn((String) null).when(iArtifactInfo0).getArtifactName();
      doReturn((Integer) null).when(iArtifactInfo0).getArtifactTimeout();
      doReturn((String) null).when(iArtifactInfo0).getArtifactType();
      doReturn((String) null).when(iArtifactInfo0).getArtifactURL();
      doReturn((String) null).when(iArtifactInfo0).getArtifactUUID();
      doReturn((String) null).when(iArtifactInfo0).getArtifactVersion();
      doReturn((IArtifactInfo) null).when(iArtifactInfo0).getGeneratedArtifact();
      doReturn((List) null).when(iArtifactInfo0).getRelatedArtifacts();
      linkedList0.add(iArtifactInfo0);
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData0).getDistributionID();
      doReturn((List<IResourceInstance>) null).when(iNotificationData0).getResources();
      doReturn(linkedList0).when(iNotificationData0).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn((String) null).when(iNotificationData0).getServiceUUID();
      doReturn("(").when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      String string0 = ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      LinkedList<IVfModuleMetadata> linkedList1 = new LinkedList<IVfModuleMetadata>();
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList1.add(iVfModuleMetadata0);
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList1.removeFirst();
      linkedList0.addAll((Collection<? extends IVfModuleMetadata>) linkedList1);
      LinkedList<String> linkedList4 = new LinkedList<String>();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      LinkedList<IResourceInstance> linkedList6 = new LinkedList<IResourceInstance>();
      LinkedList<IArtifactInfo> linkedList7 = new LinkedList<IArtifactInfo>();
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("]=ztki(=]").when(iNotificationData0).getDistributionID();
      doReturn(linkedList6, linkedList6).when(iNotificationData0).getResources();
      doReturn(linkedList7).when(iNotificationData0).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData0).getServiceDescription();
      doReturn("").when(iNotificationData0).getServiceInvariantUUID();
      doReturn("").when(iNotificationData0).getServiceName();
      doReturn("VG).").when(iNotificationData0).getServiceUUID();
      doReturn("").when(iNotificationData0).getServiceVersion();
      linkedList0.spliterator();
      linkedList0.containsAll(linkedList1);
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      LinkedList<IResourceInstance> linkedList8 = new LinkedList<IResourceInstance>();
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("C'K").when(iNotificationData1).getDistributionID();
      doReturn(linkedList6, linkedList8).when(iNotificationData1).getResources();
      doReturn(linkedList7).when(iNotificationData1).getServiceArtifacts();
      doReturn("NotificationDataImpl [distributionID=").when(iNotificationData1).getServiceDescription();
      doReturn((String) null).when(iNotificationData1).getServiceInvariantUUID();
      doReturn("B.").when(iNotificationData1).getServiceName();
      doReturn("").when(iNotificationData1).getServiceUUID();
      doReturn("").when(iNotificationData1).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.add(iVfModuleMetadata0);
      linkedList0.add((IVfModuleMetadata) null);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      IVfModuleMetadata iVfModuleMetadata1 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList1, linkedList1, linkedList1, linkedList1).when(iVfModuleMetadata1).getArtifacts();
      doReturn("8u1XbrrMy{J2", "").when(iVfModuleMetadata1).getVfModuleModelDescription();
      doReturn("YR/UZ7qrmvO", "8u1XbrrMy{J2").when(iVfModuleMetadata1).getVfModuleModelInvariantUUID();
      doReturn("8u1XbrrMy{J2", ".l=(8f`8f}.9>yn").when(iVfModuleMetadata1).getVfModuleModelName();
      doReturn("", "YR/UZ7qrmvO").when(iVfModuleMetadata1).getVfModuleModelUUID();
      doReturn("[66/OPYLD.B%", ".l=(8f`8f}.9>yn").when(iVfModuleMetadata1).getVfModuleModelVersion();
      doReturn(false, true).when(iVfModuleMetadata1).isBase();
      LinkedList<IVfModuleMetadata> linkedList2 = new LinkedList<IVfModuleMetadata>();
      linkedList2.add((IVfModuleMetadata) null);
      linkedList2.offer((IVfModuleMetadata) null);
      Predicate<IVfModuleMetadata> predicate0 = (Predicate<IVfModuleMetadata>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(predicate0).test(any());
      linkedList2.removeIf(predicate0);
      linkedList0.retainAll(linkedList2);
      LinkedList<String> linkedList3 = new LinkedList<String>();
      IVfModuleMetadata iVfModuleMetadata2 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList3, linkedList3, linkedList3, linkedList1).when(iVfModuleMetadata2).getArtifacts();
      doReturn("YR/UZ7qrmvO", "8u1XbrrMy{J2").when(iVfModuleMetadata2).getVfModuleModelDescription();
      doReturn("", "8u1XbrrMy{J2").when(iVfModuleMetadata2).getVfModuleModelInvariantUUID();
      doReturn("[66/OPYLD.B%", "").when(iVfModuleMetadata2).getVfModuleModelName();
      doReturn("", "[66/OPYLD.B%").when(iVfModuleMetadata2).getVfModuleModelUUID();
      doReturn((String) null, "").when(iVfModuleMetadata2).getVfModuleModelVersion();
      doReturn(true, false).when(iVfModuleMetadata2).isBase();
      linkedList0.add(iVfModuleMetadata2);
      linkedList0.push(iVfModuleMetadata1);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      ASDCNotificationLogging aSDCNotificationLogging1 = new ASDCNotificationLogging();
      ASDCNotificationLogging aSDCNotificationLogging2 = new ASDCNotificationLogging();
      ASDCNotificationLogging aSDCNotificationLogging3 = new ASDCNotificationLogging();
      String string0 = ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      assertEquals("{\nVfModuleMetaData:\nVfModuleModelName:.l=(8f`8f}.9>yn\nVfModuleModelVersion:.l=(8f`8f}.9>yn\nVfModuleModelUUID:YR/UZ7qrmvO\nVfModuleModelInvariantUUID:8u1XbrrMy{J2\nVfModuleModelDescription:\nArtifacts UUID List:\n}\n\nisBase:true\n\n,\nNULL\n,\nVfModuleMetaData:\nVfModuleModelName:\nVfModuleModelVersion:\nVfModuleModelUUID:[66/OPYLD.B%\nVfModuleModelInvariantUUID:8u1XbrrMy{J2\nVfModuleModelDescription:8u1XbrrMy{J2\nArtifacts UUID List:\n}\n\nisBase:false\n\n\n}\n", string0);
      
      LinkedList<IResourceInstance> linkedList4 = new LinkedList<IResourceInstance>();
      LinkedList<IResourceInstance> linkedList5 = new LinkedList<IResourceInstance>((Collection<? extends IResourceInstance>) linkedList4);
      LinkedList<IArtifactInfo> linkedList6 = new LinkedList<IArtifactInfo>();
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("95y$c-.BW5V()41WR").when(iNotificationData0).getDistributionID();
      doReturn(linkedList5, linkedList4).when(iNotificationData0).getResources();
      doReturn(linkedList6).when(iNotificationData0).getServiceArtifacts();
      doReturn(", artifactTimeout=").when(iNotificationData0).getServiceDescription();
      doReturn("[66/OPYLD.B%").when(iNotificationData0).getServiceInvariantUUID();
      doReturn("[66/OPYLD.B%").when(iNotificationData0).getServiceName();
      doReturn(", artifactChecksum=").when(iNotificationData0).getServiceUUID();
      doReturn("W1vX^KnIx[x").when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      ASDCNotificationLogging aSDCNotificationLogging4 = new ASDCNotificationLogging();
      ASDCNotificationLogging aSDCNotificationLogging5 = new ASDCNotificationLogging();
      LinkedList<IResourceInstance> linkedList7 = new LinkedList<IResourceInstance>();
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("").when(iNotificationData1).getDistributionID();
      doReturn(linkedList4, linkedList7).when(iNotificationData1).getResources();
      doReturn(linkedList6).when(iNotificationData1).getServiceArtifacts();
      doReturn("3l\"ZrTP`IQ-4x]").when(iNotificationData1).getServiceDescription();
      doReturn("").when(iNotificationData1).getServiceInvariantUUID();
      doReturn("").when(iNotificationData1).getServiceName();
      doReturn("").when(iNotificationData1).getServiceUUID();
      doReturn("").when(iNotificationData1).getServiceVersion();
      String string1 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      assertEquals("ASDC Notification:\nDistributionID:\nServiceName:\nServiceVersion:\nServiceUUID:\nServiceInvariantUUID:\nServiceDescription:3l\"ZrTP`IQ-4x]\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n", string1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData0).getDistributionID();
      doReturn((List) null).when(iNotificationData0).getResources();
      doReturn((List) null).when(iNotificationData0).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn((String) null).when(iNotificationData0).getServiceUUID();
      doReturn((String) null).when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      INotificationData iNotificationData1 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData1).getDistributionID();
      doReturn((List) null).when(iNotificationData1).getResources();
      doReturn((List) null).when(iNotificationData1).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData1).getServiceDescription();
      doReturn((String) null).when(iNotificationData1).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData1).getServiceName();
      doReturn((String) null).when(iNotificationData1).getServiceUUID();
      doReturn((String) null).when(iNotificationData1).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData1);
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      INotificationData iNotificationData2 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData2).getDistributionID();
      doReturn((List) null).when(iNotificationData2).getResources();
      doReturn((List) null).when(iNotificationData2).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData2).getServiceDescription();
      doReturn((String) null).when(iNotificationData2).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData2).getServiceName();
      doReturn((String) null).when(iNotificationData2).getServiceUUID();
      doReturn((String) null).when(iNotificationData2).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData2);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging aSDCNotificationLogging1 = new ASDCNotificationLogging();
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      INotificationData iNotificationData3 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData3).getDistributionID();
      doReturn((List) null).when(iNotificationData3).getResources();
      doReturn((List) null).when(iNotificationData3).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData3).getServiceDescription();
      doReturn((String) null).when(iNotificationData3).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData3).getServiceName();
      doReturn((String) null).when(iNotificationData3).getServiceUUID();
      doReturn((String) null).when(iNotificationData3).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData3);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      ASDCNotificationLogging aSDCNotificationLogging2 = new ASDCNotificationLogging();
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      doReturn((List) null, (List) null, (List) null).when(iVfModuleMetadata0).getArtifacts();
      doReturn((String) null, (String) null, (String) null).when(iVfModuleMetadata0).getVfModuleModelDescription();
      doReturn((String) null, (String) null, (String) null).when(iVfModuleMetadata0).getVfModuleModelInvariantUUID();
      doReturn((String) null, (String) null, (String) null).when(iVfModuleMetadata0).getVfModuleModelName();
      doReturn((String) null, (String) null, (String) null).when(iVfModuleMetadata0).getVfModuleModelUUID();
      doReturn((String) null, (String) null, (String) null).when(iVfModuleMetadata0).getVfModuleModelVersion();
      doReturn(false, false, false).when(iVfModuleMetadata0).isBase();
      linkedList0.add(iVfModuleMetadata0);
      linkedList0.removeLastOccurrence("ASDC Notification:\nDistributionID:NULL\nServiceName:NULL\nServiceVersion:NULL\nServiceUUID:NULL\nServiceInvariantUUID:NULL\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\n\n}\n\n");
      linkedList0.remove((Object) null);
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      ASDCNotificationLogging aSDCNotificationLogging3 = new ASDCNotificationLogging();
      String string0 = ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      String string1 = ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      assertEquals("{\nVfModuleMetaData:\nVfModuleModelName:NULL\nVfModuleModelVersion:NULL\nVfModuleModelUUID:NULL\nVfModuleModelInvariantUUID:NULL\nVfModuleModelDescription:NULL\nArtifacts UUID List:NULL\nisBase:false\n\n\n}\n", string1);
      assertTrue(string1.equals((Object)string0));
      
      ASDCNotificationLogging aSDCNotificationLogging4 = new ASDCNotificationLogging();
      ASDCNotificationLogging.dumpVfModuleMetaDataList((List<IVfModuleMetadata>) null);
      INotificationData iNotificationData4 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iNotificationData4).getDistributionID();
      doReturn((List) null).when(iNotificationData4).getResources();
      doReturn((List) null).when(iNotificationData4).getServiceArtifacts();
      doReturn((String) null).when(iNotificationData4).getServiceDescription();
      doReturn((String) null).when(iNotificationData4).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData4).getServiceName();
      doReturn((String) null).when(iNotificationData4).getServiceUUID();
      doReturn((String) null).when(iNotificationData4).getServiceVersion();
      String string2 = ASDCNotificationLogging.dumpASDCNotification(iNotificationData4);
      assertEquals("ASDC Notification:\nDistributionID:NULL\nServiceName:NULL\nServiceVersion:NULL\nServiceUUID:NULL\nServiceInvariantUUID:NULL\nServiceDescription:NULL\nService Artifacts List:\nNULL\nResource Instances List:\nNULL\n", string2);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ASDCNotificationLogging aSDCNotificationLogging0 = new ASDCNotificationLogging();
      LinkedList<IResourceInstance> linkedList0 = new LinkedList<IResourceInstance>();
      IResourceInstance iResourceInstance0 = mock(IResourceInstance.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(iResourceInstance0).getArtifacts();
      doReturn((String) null).when(iResourceInstance0).getResourceInstanceName();
      doReturn((String) null).when(iResourceInstance0).getResourceInvariantUUID();
      doReturn((String) null).when(iResourceInstance0).getResourceName();
      doReturn((String) null).when(iResourceInstance0).getResourceType();
      doReturn((String) null).when(iResourceInstance0).getResourceUUID();
      doReturn((String) null).when(iResourceInstance0).getResourceVersion();
      linkedList0.add(iResourceInstance0);
      LinkedList<IArtifactInfo> linkedList1 = new LinkedList<IArtifactInfo>();
      INotificationData iNotificationData0 = mock(INotificationData.class, new ViolatedAssumptionAnswer());
      doReturn("(n,0").when(iNotificationData0).getDistributionID();
      doReturn(linkedList0, linkedList0).when(iNotificationData0).getResources();
      doReturn(linkedList1).when(iNotificationData0).getServiceArtifacts();
      doReturn("(n,0").when(iNotificationData0).getServiceDescription();
      doReturn((String) null).when(iNotificationData0).getServiceInvariantUUID();
      doReturn((String) null).when(iNotificationData0).getServiceName();
      doReturn("").when(iNotificationData0).getServiceUUID();
      doReturn("t1N;ZSJsATt:&Ug").when(iNotificationData0).getServiceVersion();
      ASDCNotificationLogging.dumpASDCNotification(iNotificationData0);
      LinkedList<IVfModuleMetadata> linkedList2 = new LinkedList<IVfModuleMetadata>();
      linkedList2.clear();
      // Undeclared exception!
      try { 
        linkedList2.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<IVfModuleMetadata> linkedList0 = new LinkedList<IVfModuleMetadata>();
      ASDCNotificationLogging.dumpVfModuleMetaDataList(linkedList0);
      IVfModuleMetadata iVfModuleMetadata0 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.add(iVfModuleMetadata0);
      linkedList0.remove((Object) "\n}\n");
      IVfModuleMetadata iVfModuleMetadata1 = mock(IVfModuleMetadata.class, new ViolatedAssumptionAnswer());
      linkedList0.offerLast(iVfModuleMetadata1);
      // Undeclared exception!
      try { 
        linkedList0.subList((-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1
         //
         verifyException("java.util.SubList", e);
      }
  }
}
