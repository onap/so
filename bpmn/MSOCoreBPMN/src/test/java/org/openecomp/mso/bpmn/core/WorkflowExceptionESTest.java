/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 11:35:37 GMT 2016
 */

package org.openecomp.mso.bpmn.core;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class WorkflowExceptionESTest extends WorkflowExceptionESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException("(YdK~.N3;c2C", 336, "(YdK~.N3;c2C");
      workflowException0.getProcessKey();
      assertEquals(336, workflowException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException("", 0, "");
      workflowException0.getProcessKey();
      assertEquals(0, workflowException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException((String) null, 0, "^Y:");
      String string0 = workflowException0.getErrorMessage();
      assertEquals(0, workflowException0.getErrorCode());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException("", 1216, "");
      workflowException0.getErrorMessage();
      assertEquals(1216, workflowException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException("", 0, "");
      int int0 = workflowException0.getErrorCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException((String) null, (-1911), (String) null);
      int int0 = workflowException0.getErrorCode();
      assertEquals((-1911), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException((String) null, 336, (String) null);
      workflowException0.getErrorMessage();
      assertEquals(336, workflowException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException((String) null, 336, (String) null);
      int int0 = workflowException0.getErrorCode();
      assertEquals(336, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException((String) null, 336, (String) null);
      workflowException0.getProcessKey();
      assertEquals(336, workflowException0.getErrorCode());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      WorkflowException workflowException0 = new WorkflowException((String) null, 336, (String) null);
      String string0 = workflowException0.toString();
      assertEquals("WorkflowException[processKey=null,errorCode=336,errorMessage=null]", string0);
  }
}
