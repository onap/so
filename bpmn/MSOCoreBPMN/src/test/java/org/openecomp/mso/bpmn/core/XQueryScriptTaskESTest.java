/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 11:28:14 GMT 2016
 */

package org.openecomp.mso.bpmn.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;

import java.io.IOException;
import net.sf.saxon.s9api.XQueryCompiler;
import net.sf.saxon.s9api.XQueryExecutable;
import org.camunda.bpm.engine.impl.pvm.runtime.ExecutionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.PrivateAccess;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class XQueryScriptTaskESTest extends XQueryScriptTaskESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XQueryScriptTask xQueryScriptTask0 = new XQueryScriptTask();
      XQueryCompiler xQueryCompiler0 = mock(XQueryCompiler.class, new ViolatedAssumptionAnswer());
      doReturn((XQueryExecutable) null).when(xQueryCompiler0).compile(any(java.io.InputStream.class));
      Object object0 = PrivateAccess.callMethod((Class<XQueryScriptTask>) XQueryScriptTask.class, xQueryScriptTask0, "compile", (Object) xQueryCompiler0, (Class<?>) XQueryCompiler.class, (Object) "", (Class<?>) String.class);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XQueryScriptTask xQueryScriptTask0 = new XQueryScriptTask();
      XQueryCompiler xQueryCompiler0 = mock(XQueryCompiler.class, new ViolatedAssumptionAnswer());
      try { 
        PrivateAccess.callMethod((Class<XQueryScriptTask>) XQueryScriptTask.class, xQueryScriptTask0, "compile", (Object) xQueryCompiler0, (Class<?>) XQueryCompiler.class, (Object) "Sk##N$V^.", (Class<?>) String.class);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Resource not found: Sk##N$V^.
         //
         verifyException("org.openecomp.mso.bpmn.core.XQueryScriptTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XQueryScriptTask xQueryScriptTask0 = new XQueryScriptTask();
      try { 
        PrivateAccess.callMethod((Class<XQueryScriptTask>) XQueryScriptTask.class, xQueryScriptTask0, "compile", (Object) null, (Class<?>) XQueryCompiler.class, (Object) "", (Class<?>) String.class);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.bpmn.core.XQueryScriptTask", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XQueryScriptTask xQueryScriptTask0 = new XQueryScriptTask();
      ExecutionImpl executionImpl0 = new ExecutionImpl();
      try { 
        xQueryScriptTask0.execute(executionImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XQueryScriptTask injected field 'scriptFile' is bad: missing required field
         //
         verifyException("org.openecomp.mso.bpmn.core.BaseTask", e);
      }
  }
}
