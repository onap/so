/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 14 11:28:14 GMT 2016
 */

package org.openecomp.mso.bpmn.core;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;

@EvoSuiteClassExclude
public class XQueryScriptTaskESTestscaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);

  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.openecomp.mso.bpmn.core.XQueryScriptTask"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init(); 
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
     
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(XQueryScriptTaskESTestscaffolding.class.getClassLoader() ,
      "net.sf.saxon.pattern.PatternFinder",
      "net.sf.saxon.pattern.AnyNodeTest",
      "net.sf.saxon.tree.linked.TextImpl",
      "net.sf.saxon.tree.linked.ElementImpl",
      "org.camunda.bpm.engine.impl.cmmn.execution.CmmnExecution",
      "org.camunda.bpm.engine.impl.context.CaseExecutionContext",
      "org.camunda.bpm.engine.impl.cmmn.transformer.CmmnTransformFactory",
      "org.camunda.bpm.engine.impl.pvm.PvmScope",
      "net.sf.saxon.type.TypeHierarchy",
      "net.sf.saxon.trans.Mode",
      "org.camunda.bpm.engine.impl.tree.TreeWalker$WalkCondition",
      "org.camunda.bpm.engine.runtime.ProcessInstance",
      "net.sf.saxon.trans.CompilerInfo",
      "net.sf.saxon.type.ConversionResult",
      "net.sf.saxon.type.ItemType",
      "net.sf.saxon.om.NamePool",
      "net.sf.saxon.value.NumericValue",
      "org.camunda.bpm.engine.impl.jobexecutor.FailedJobCommandFactory",
      "net.sf.saxon.s9api.Processor",
      "net.sf.saxon.om.NameChecker",
      "org.camunda.bpm.engine.impl.persistence.entity.util.FormPropertyStartContext",
      "net.sf.saxon.expr.sort.SimpleCollation",
      "net.sf.saxon.z.IntIterator",
      "net.sf.saxon.expr.PendingUpdateList",
      "net.sf.saxon.om.NamespaceBinding",
      "net.sf.saxon.lib.StaticQueryContextFactory",
      "net.sf.saxon.serialize.charcode.CharacterSet",
      "net.sf.saxon.event.Receiver",
      "org.camunda.bpm.model.bpmn.instance.FlowElement",
      "net.sf.saxon.om.AbstractItem",
      "net.sf.saxon.lib.ExternalObjectModel",
      "net.sf.saxon.event.LocationProvider",
      "org.camunda.bpm.engine.delegate.Expression",
      "net.sf.saxon.value.QualifiedNameValue",
      "net.sf.saxon.om.MutableDocumentInfo",
      "org.camunda.bpm.engine.impl.pvm.PvmActivity",
      "org.camunda.bpm.engine.impl.cfg.BpmnParseFactory",
      "org.camunda.bpm.model.bpmn.instance.BpmnModelElementInstance",
      "net.sf.saxon.pattern.NodeTest",
      "net.sf.saxon.om.NamespaceException",
      "net.sf.saxon.lib.EnvironmentVariableResolver",
      "org.camunda.bpm.application.ProcessApplicationUnavailableException",
      "net.sf.saxon.expr.instruct.Procedure",
      "net.sf.saxon.om.Sequence",
      "org.camunda.bpm.engine.impl.pvm.PvmProcessDefinition",
      "net.sf.saxon.type.ValidationFailure",
      "org.camunda.bpm.engine.delegate.DelegateCaseExecution",
      "net.sf.saxon.tree.iter.UnfailingIterator",
      "net.sf.saxon.type.AnySimpleType",
      "org.camunda.bpm.engine.runtime.CaseExecution",
      "net.sf.saxon.event.ProxyReceiver",
      "net.sf.saxon.lib.ConversionRules",
      "net.sf.saxon.lib.OutputURIResolver",
      "net.sf.saxon.expr.instruct.ValidatingInstruction",
      "net.sf.saxon.om.FunctionItem",
      "net.sf.saxon.om.MutableNodeInfo",
      "org.camunda.bpm.engine.impl.pvm.process.ScopeImpl",
      "net.sf.saxon.pattern.PatternWithPredicate",
      "net.sf.saxon.expr.ErrorExpression",
      "net.sf.saxon.om.Name10Checker",
      "net.sf.saxon.event.ComplexContentOutputter",
      "org.camunda.bpm.engine.impl.cfg.ProcessEngineConfigurationImpl",
      "org.openecomp.mso.logger.MsoLogger$ErrorCode",
      "org.camunda.bpm.engine.impl.pvm.runtime.AtomicOperation",
      "org.camunda.bpm.engine.delegate.DelegateTask",
      "net.sf.saxon.style.LiteralResultElement",
      "org.camunda.bpm.engine.impl.pvm.runtime.operation.PvmAtomicOperation",
      "org.camunda.bpm.engine.impl.core.model.CoreActivity",
      "net.sf.saxon.tree.iter.LookaheadIterator",
      "net.sf.saxon.om.AtomicSequence",
      "net.sf.saxon.s9api.XQueryCompiler",
      "net.sf.saxon.pattern.LocalNameTest",
      "net.sf.saxon.pattern.PatternParser",
      "net.sf.saxon.expr.instruct.SlotManager",
      "net.sf.saxon.PreparedStylesheet",
      "org.camunda.bpm.engine.impl.interceptor.CommandContext",
      "org.openecomp.mso.logger.MsoLogger$Catalog",
      "net.sf.saxon.lib.ParseOptions",
      "net.sf.saxon.expr.ItemMappingIterator",
      "net.sf.saxon.tree.iter.EmptyIterator",
      "org.camunda.bpm.engine.impl.persistence.entity.TaskEntity",
      "org.camunda.bpm.engine.impl.context.Context",
      "net.sf.saxon.lib.LocalizerFactory",
      "org.camunda.bpm.engine.ProcessEngineServices",
      "org.camunda.bpm.engine.runtime.Execution",
      "org.camunda.bpm.engine.impl.interceptor.CommandExecutor",
      "net.sf.saxon.s9api.ItemType$1",
      "org.camunda.bpm.engine.delegate.ProcessEngineServicesAware",
      "org.camunda.bpm.engine.ProcessEngineConfiguration",
      "org.camunda.bpm.engine.impl.cmmn.model.CmmnActivity",
      "net.sf.saxon.s9api.ItemType$2",
      "net.sf.saxon.s9api.ItemType$3",
      "org.camunda.bpm.engine.impl.pvm.ReadOnlyProcessDefinition",
      "net.sf.saxon.pattern.NodeKindTest",
      "org.camunda.bpm.engine.impl.core.variable.event.VariableEvent",
      "net.sf.saxon.expr.LetExpression",
      "org.camunda.bpm.engine.delegate.BaseDelegateExecution",
      "net.sf.saxon.s9api.XdmItem",
      "net.sf.saxon.expr.Binding",
      "net.sf.saxon.expr.instruct.ParentNodeConstructor",
      "org.camunda.bpm.engine.runtime.VariableInstance",
      "org.camunda.bpm.engine.runtime.Incident",
      "net.sf.saxon.om.NamespaceResolver",
      "net.sf.saxon.expr.instruct.AnalyzeString",
      "net.sf.saxon.z.IntHashMap",
      "org.camunda.bpm.engine.impl.cmmn.entity.runtime.CaseExecutionEntity",
      "net.sf.saxon.expr.instruct.ResultDocument",
      "org.openecomp.mso.bpmn.core.BadInjectedFieldException",
      "org.camunda.bpm.engine.impl.variable.serializer.ValueFields",
      "net.sf.saxon.type.StringToDouble",
      "net.sf.saxon.value.SequenceType",
      "net.sf.saxon.type.ComplexType",
      "org.camunda.bpm.engine.impl.jobexecutor.JobExecutorContext",
      "net.sf.saxon.type.AnyType",
      "org.camunda.bpm.engine.impl.persistence.entity.EventSubscriptionEntity",
      "net.sf.saxon.expr.StaticContext",
      "org.camunda.bpm.engine.ProcessEngineException",
      "org.camunda.bpm.engine.impl.persistence.entity.SuspensionState$SuspensionStateImpl",
      "net.sf.saxon.lib.SerializerFactory",
      "net.sf.saxon.tree.util.SteppingNode",
      "net.sf.saxon.functions.IntegratedFunctionLibrary",
      "net.sf.saxon.evpull.PullEvent",
      "net.sf.saxon.expr.XPathContextMinor",
      "org.camunda.bpm.engine.management.JobDefinition",
      "com.att.eelf.i18n.EELFResolvableErrorEnum",
      "net.sf.saxon.om.DocumentInfo",
      "net.sf.saxon.om.QNameException",
      "org.camunda.bpm.engine.impl.javax.el.ValueReference",
      "org.camunda.bpm.engine.impl.persistence.entity.JobEntity",
      "net.sf.saxon.type.SchemaComponentVisitor",
      "net.sf.saxon.z.AbstractIntSet",
      "net.sf.saxon.tree.iter.AxisIterator",
      "net.sf.saxon.s9api.XdmValue",
      "net.sf.saxon.lib.CollationURIResolver",
      "org.openecomp.mso.bpmn.core.XQueryScriptTask",
      "org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntityVariableStore",
      "com.att.eelf.i18n.EELFResourceManager$RESOURCE_TYPES",
      "org.camunda.bpm.engine.impl.delegate.DelegateInvocation",
      "net.sf.saxon.tree.tiny.AppendableCharSequence",
      "net.sf.saxon.om.GroundedValue",
      "net.sf.saxon.tree.linked.NodeFactory",
      "net.sf.saxon.type.SchemaDeclaration",
      "net.sf.saxon.tree.linked.CommentImpl",
      "org.camunda.bpm.engine.impl.interceptor.CommandInterceptor",
      "org.camunda.bpm.engine.variable.value.TypedValue",
      "net.sf.saxon.trans.BuiltInRuleSet",
      "org.apache.ibatis.transaction.TransactionFactory",
      "net.sf.saxon.value.AtomicValue",
      "net.sf.saxon.trans.NonDelegatingURIResolver",
      "net.sf.saxon.functions.VendorFunctionLibrary",
      "org.camunda.bpm.engine.impl.cmmn.execution.CmmnActivityExecution",
      "net.sf.saxon.pattern.PatternParser20",
      "net.sf.saxon.expr.instruct.TraceExpression",
      "org.camunda.bpm.engine.exception.NotAllowedException",
      "net.sf.saxon.Configuration",
      "org.openecomp.mso.bpmn.core.MissingInjectedFieldException",
      "net.sf.saxon.tree.util.FastStringBuffer",
      "net.sf.saxon.tree.linked.NodeImpl",
      "com.att.eelf.configuration.SLF4jWrapper",
      "org.camunda.bpm.engine.task.Task",
      "org.camunda.bpm.engine.impl.javax.el.Expression",
      "net.sf.saxon.type.Type",
      "net.sf.saxon.s9api.XdmNode",
      "net.sf.saxon.value.QNameValue",
      "org.camunda.bpm.engine.impl.context.CoreExecutionContext",
      "org.openecomp.mso.logger.MsoLogger",
      "net.sf.saxon.type.SchemaType",
      "org.camunda.bpm.engine.impl.core.variable.scope.AbstractVariableScope",
      "net.sf.saxon.java.JavaPlatform$1",
      "net.sf.saxon.expr.instruct.ElementCreator",
      "net.sf.saxon.om.Item",
      "org.camunda.bpm.engine.variable.VariableMap",
      "org.camunda.bpm.engine.impl.pvm.runtime.ActivityInstanceState$ActivityInstanceStateImpl",
      "net.sf.saxon.lib.SchemaURIResolver",
      "org.camunda.bpm.engine.impl.interceptor.CommandExecutorImpl",
      "org.camunda.bpm.engine.impl.core.variable.scope.CoreVariableStore",
      "net.sf.saxon.lib.ModuleURIResolver",
      "org.camunda.bpm.engine.impl.context.BpmnExecutionContext",
      "net.sf.saxon.expr.parser.ExpressionVisitor",
      "net.sf.saxon.om.SequenceIterator",
      "net.sf.saxon.z.IntHashSet",
      "net.sf.saxon.type.BuiltInType",
      "org.apache.ibatis.session.SqlSessionFactory",
      "net.sf.saxon.expr.instruct.Executable",
      "net.sf.saxon.om.DocumentPool",
      "net.sf.saxon.expr.LastPositionFinder",
      "net.sf.saxon.expr.instruct.TailCallReturner",
      "org.openecomp.mso.logger.MsoLogger$ResponseCode",
      "net.sf.saxon.type.BuiltInAtomicType",
      "org.camunda.bpm.engine.SuspendedEntityInteractionException",
      "org.openecomp.mso.logger.MsoLogger$StatusCode",
      "com.att.eelf.configuration.EELFManager",
      "org.camunda.bpm.engine.impl.pvm.runtime.ExecutionStartContext",
      "org.camunda.bpm.engine.impl.core.operation.CoreAtomicOperation",
      "org.camunda.bpm.engine.impl.pvm.PvmTransition",
      "org.camunda.bpm.engine.impl.persistence.entity.SuspensionState",
      "org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity",
      "org.camunda.bpm.engine.impl.core.variable.CoreVariableInstance",
      "net.sf.saxon.pattern.ContentTypeTest",
      "net.sf.saxon.query.QueryParser",
      "net.sf.saxon.om.NodeName",
      "net.sf.saxon.value.Closure",
      "net.sf.saxon.expr.instruct.FixedElement",
      "org.camunda.bpm.engine.impl.pvm.process.TransitionImpl",
      "net.sf.saxon.s9api.ConstructedItemType",
      "net.sf.saxon.lib.Numberer",
      "org.camunda.bpm.engine.delegate.JavaDelegate",
      "net.sf.saxon.om.IdentityComparable",
      "net.sf.saxon.z.IntSet",
      "org.camunda.bpm.application.ProcessApplicationReference",
      "net.sf.saxon.pattern.QNameTest",
      "org.camunda.bpm.engine.delegate.BpmnModelExecutionContext",
      "net.sf.saxon.expr.sort.SortKeyDefinition",
      "net.sf.saxon.style.XSLAnalyzeString",
      "org.camunda.bpm.engine.delegate.DelegateExecution",
      "org.camunda.bpm.engine.delegate.CmmnModelExecutionContext",
      "net.sf.saxon.expr.instruct.ValueOf",
      "net.sf.saxon.type.AnyItemType",
      "com.att.eelf.i18n.EELFMsgs",
      "org.camunda.bpm.engine.impl.javax.el.ELContext",
      "net.sf.saxon.expr.instruct.WithParam",
      "org.camunda.bpm.engine.impl.core.variable.event.VariableEventDispatcher",
      "net.sf.saxon.expr.Assignation",
      "net.sf.saxon.value.StringToDouble11",
      "org.camunda.bpm.engine.variable.type.ValueType",
      "net.sf.saxon.style.StylesheetModule",
      "net.sf.saxon.value.EmptySequence",
      "org.camunda.bpm.engine.impl.interceptor.CommandContextListener",
      "org.camunda.bpm.engine.impl.cmmn.execution.CmmnCaseInstance",
      "net.sf.saxon.style.PrincipalStylesheetModule",
      "net.sf.saxon.type.PlainType",
      "org.camunda.bpm.engine.repository.CaseDefinition",
      "org.camunda.bpm.engine.impl.db.HasDbRevision",
      "net.sf.saxon.query.StaticQueryContext",
      "net.sf.saxon.expr.instruct.SimpleNodeConstructor",
      "net.sf.saxon.trans.DynamicLoader",
      "net.sf.saxon.s9api.ItemType$BuiltInAtomicItemType",
      "org.camunda.bpm.engine.variable.type.SerializableValueType",
      "net.sf.saxon.event.SaxonLocator",
      "net.sf.saxon.expr.parser.Optimizer",
      "org.camunda.bpm.engine.impl.pvm.PvmException",
      "org.camunda.bpm.engine.impl.core.variable.VariableMapImpl",
      "net.sf.saxon.expr.sort.Sortable",
      "net.sf.saxon.type.ExternalObjectType",
      "net.sf.saxon.expr.Literal",
      "net.sf.saxon.style.StyleElement",
      "org.camunda.bpm.engine.impl.cmmn.model.CmmnCaseDefinition",
      "org.camunda.bpm.engine.impl.core.variable.scope.SimpleVariableStore",
      "net.sf.saxon.type.ValidationException",
      "org.camunda.bpm.engine.repository.ProcessDefinition",
      "net.sf.saxon.style.AbsentExtensionElement",
      "net.sf.saxon.style.XSLStylesheet",
      "net.sf.saxon.query.XQueryFunctionBinder",
      "net.sf.saxon.Platform",
      "net.sf.saxon.om.AbsolutePath",
      "net.sf.saxon.style.SourceBinding",
      "org.camunda.bpm.engine.impl.interceptor.SessionFactory",
      "net.sf.saxon.trace.InstructionInfo",
      "net.sf.saxon.pattern.NameTest",
      "net.sf.saxon.trans.XPathException",
      "net.sf.saxon.pattern.ItemTypePattern",
      "org.camunda.bpm.model.bpmn.BpmnModelInstance",
      "net.sf.saxon.type.SimpleType",
      "net.sf.saxon.tree.linked.ProcInstImpl",
      "net.sf.saxon.expr.instruct.UserFunction",
      "net.sf.saxon.event.SequenceReceiver",
      "org.camunda.bpm.engine.delegate.VariableScope",
      "net.sf.saxon.event.FilterFactory",
      "org.camunda.bpm.engine.ProcessEngine",
      "org.camunda.bpm.engine.impl.cmmn.execution.CaseExecutionImpl",
      "org.camunda.bpm.engine.impl.variable.listener.CaseVariableListenerInvocation",
      "org.camunda.bpm.engine.BadUserRequestException",
      "net.sf.saxon.expr.Callable",
      "org.camunda.bpm.engine.impl.context.ExecutionContext",
      "net.sf.saxon.tree.tiny.TinyTree",
      "org.camunda.bpm.engine.impl.pvm.runtime.PvmExecutionImpl",
      "net.sf.saxon.tree.iter.EmptyAxisIterator",
      "net.sf.saxon.om.NotationSet",
      "net.sf.saxon.expr.CollationMap",
      "net.sf.saxon.tree.util.AttributeCollectionImpl",
      "net.sf.saxon.type.UnionType",
      "net.sf.saxon.expr.instruct.GeneralVariable",
      "net.sf.saxon.trans.LicenseException",
      "org.camunda.bpm.engine.impl.pvm.PvmExecution",
      "net.sf.saxon.functions.FunctionLibrary",
      "net.sf.saxon.lib.StandardURIResolver",
      "org.camunda.bpm.engine.impl.persistence.entity.ProcessDefinitionEntity",
      "org.camunda.bpm.engine.impl.core.variable.scope.AbstractVariableStore",
      "net.sf.saxon.type.TypeHierarchy$2",
      "net.sf.saxon.trans.Mode$RuleAction",
      "org.camunda.bpm.engine.runtime.Job",
      "net.sf.saxon.type.TypeHierarchy$1",
      "org.camunda.bpm.model.xml.ModelInstance",
      "net.sf.saxon.om.FingerprintedNode",
      "org.camunda.bpm.engine.impl.pvm.process.ProcessDefinitionImpl",
      "net.sf.saxon.tree.linked.ParentNodeImpl",
      "net.sf.saxon.type.ErrorType",
      "org.openecomp.mso.entity.MsoRequest",
      "net.sf.saxon.value.NotationValue",
      "org.camunda.bpm.engine.impl.pvm.runtime.ExecutionImpl",
      "net.sf.saxon.s9api.ItemType",
      "net.sf.saxon.type.Untyped",
      "net.sf.saxon.expr.parser.PathMap$PathMapRoot",
      "net.sf.saxon.expr.instruct.AttributeCreator",
      "org.camunda.bpm.engine.impl.task.delegate.TaskListenerInvocation",
      "net.sf.saxon.expr.instruct.AttributeSet",
      "net.sf.saxon.trans.Mode$RuleFilter",
      "net.sf.saxon.s9api.XdmAtomicValue",
      "net.sf.saxon.om.AttributeCollection",
      "org.camunda.bpm.model.xml.instance.ModelElementInstance",
      "net.sf.saxon.expr.sort.RuleBasedSubstringMatcher",
      "org.camunda.bpm.engine.impl.cfg.StandaloneProcessEngineConfiguration",
      "org.camunda.bpm.engine.impl.db.DbEntity",
      "net.sf.saxon.java.JavaPlatform",
      "org.camunda.bpm.engine.impl.pvm.delegate.ActivityExecution",
      "org.camunda.bpm.engine.runtime.EventSubscription",
      "net.sf.saxon.lib.URIChecker",
      "net.sf.saxon.tree.linked.DocumentImpl",
      "net.sf.saxon.s9api.XQueryExecutable",
      "net.sf.saxon.expr.instruct.FixedAttribute",
      "net.sf.saxon.expr.XPathContextMajor",
      "net.sf.saxon.type.AtomicType",
      "net.sf.saxon.expr.instruct.DocumentInstr",
      "net.sf.saxon.expr.Expression",
      "net.sf.saxon.serialize.charcode.CharacterSetFactory",
      "com.att.eelf.configuration.EELFLogger$Level",
      "org.camunda.bpm.engine.impl.core.variable.scope.MapBasedVariableStore",
      "net.sf.saxon.tree.util.Navigator",
      "net.sf.saxon.pattern.NamespaceTest",
      "org.camunda.bpm.engine.impl.pvm.runtime.ProcessInstanceStartContext",
      "org.camunda.bpm.engine.delegate.DelegateCaseVariableInstance",
      "org.camunda.bpm.engine.impl.pvm.PvmProcessElement",
      "org.camunda.bpm.engine.impl.javax.el.ValueExpression",
      "net.sf.saxon.tree.iter.ReversibleIterator",
      "com.att.eelf.configuration.EELFLogger",
      "net.sf.saxon.event.Builder",
      "org.camunda.bpm.engine.runtime.CaseInstance",
      "net.sf.saxon.s9api.SaxonApiException",
      "org.camunda.bpm.engine.impl.db.DbEntityLifecycleAware",
      "net.sf.saxon.om.StructuredQName",
      "org.camunda.bpm.engine.impl.pvm.process.ActivityImpl",
      "org.camunda.bpm.engine.impl.core.model.CoreModelElement",
      "org.camunda.bpm.engine.impl.pvm.PvmProcessInstance",
      "net.sf.saxon.style.StyleNodeFactory",
      "net.sf.saxon.expr.instruct.Instruction",
      "net.sf.saxon.functions.FunctionLibraryList",
      "org.camunda.bpm.engine.delegate.DelegateListener",
      "net.sf.saxon.event.TeeOutputter",
      "net.sf.saxon.lib.CollectionURIResolver",
      "net.sf.saxon.type.SchemaException",
      "net.sf.saxon.serialize.CDATAFilter",
      "net.sf.saxon.lib.StringCollator",
      "net.sf.saxon.expr.XPathContext",
      "net.sf.saxon.lib.SourceResolver",
      "net.sf.saxon.expr.MappingFunction",
      "net.sf.saxon.expr.Container",
      "net.sf.saxon.type.SchemaComponent",
      "net.sf.saxon.om.Name11Checker",
      "net.sf.saxon.expr.parser.ExpressionParser",
      "org.camunda.bpm.engine.impl.history.event.HistoryEventType",
      "net.sf.saxon.event.PipelineConfiguration",
      "net.sf.saxon.tree.wrapper.SiblingCountingNode",
      "org.camunda.bpm.engine.impl.pvm.process.HasDIBounds",
      "net.sf.saxon.value.MemoClosure",
      "net.sf.saxon.value.DecimalValue",
      "org.camunda.bpm.engine.delegate.DelegateVariableInstance",
      "net.sf.saxon.TypeCheckerEnvironment",
      "net.sf.saxon.serialize.AttributeSorter",
      "net.sf.saxon.regex.RegularExpression",
      "net.sf.saxon.style.DataElement",
      "net.sf.saxon.lib.ExtensionFunctionDefinition",
      "net.sf.saxon.lib.SubstringMatcher",
      "net.sf.saxon.lib.TraceListener",
      "org.camunda.bpm.model.bpmn.instance.BaseElement",
      "net.sf.saxon.style.Declaration",
      "net.sf.saxon.value.BooleanValue",
      "net.sf.saxon.expr.parser.CodeInjector",
      "net.sf.saxon.tree.util.DocumentNumberAllocator",
      "net.sf.saxon.pattern.PatternThatSetsCurrent",
      "net.sf.saxon.expr.instruct.Debugger",
      "org.openecomp.mso.bpmn.core.BaseTask",
      "net.sf.saxon.pattern.Pattern",
      "net.sf.saxon.expr.parser.PathMap$PathMapNode",
      "org.camunda.bpm.engine.impl.persistence.entity.VariableInstanceEntity",
      "net.sf.saxon.expr.instruct.SavedNamespaceContext",
      "org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity",
      "org.camunda.bpm.engine.impl.variable.AbstractPersistentVariableStore",
      "org.camunda.bpm.engine.impl.interceptor.CommandInvocationContext",
      "com.att.eelf.i18n.EELFResourceManager",
      "org.camunda.bpm.engine.impl.core.delegate.CoreActivityBehavior",
      "net.sf.saxon.om.NodeInfo",
      "net.sf.saxon.event.NamespaceReducer",
      "org.openecomp.mso.logger.MessageEnum",
      "org.camunda.bpm.engine.impl.pvm.runtime.ActivityInstanceState",
      "org.camunda.bpm.engine.impl.db.HasDbReferences",
      "org.camunda.bpm.engine.impl.tree.Collector",
      "net.sf.saxon.expr.StringLiteral",
      "org.camunda.bpm.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration",
      "net.sf.saxon.expr.ItemMappingFunction",
      "net.sf.saxon.expr.instruct.UseAttributeSets",
      "com.att.eelf.i18n.EELFResourceManager$1",
      "org.camunda.bpm.engine.impl.core.instance.CoreExecution",
      "net.sf.saxon.tree.iter.GroundedIterator",
      "org.camunda.bpm.engine.variable.type.PrimitiveValueType"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(XQueryScriptTaskESTestscaffolding.class.getClassLoader());

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.att.eelf.i18n.EELFResourceManager",
      "org.openecomp.mso.logger.MessageEnum",
      "org.openecomp.mso.logger.MsoLogger$Catalog",
      "org.openecomp.mso.logger.MsoLogger",
      "com.att.eelf.i18n.EELFMsgs",
      "com.att.eelf.i18n.EELFResourceManager$RESOURCE_TYPES",
      "com.att.eelf.configuration.EELFLogger$Level",
      "com.att.eelf.configuration.EELFManager",
      "org.openecomp.mso.bpmn.core.XQueryScriptTask",
      "org.openecomp.mso.logger.MsoLogger$ErrorCode",
      "org.camunda.bpm.engine.impl.javax.el.Expression",
      "org.camunda.bpm.engine.impl.javax.el.ValueExpression",
      "org.camunda.bpm.engine.impl.core.variable.scope.AbstractVariableScope",
      "org.camunda.bpm.engine.impl.core.instance.CoreExecution",
      "org.camunda.bpm.engine.impl.pvm.runtime.PvmExecutionImpl",
      "org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity",
      "org.camunda.bpm.engine.impl.pvm.runtime.ActivityInstanceState",
      "org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntityVariableStore",
      "org.camunda.bpm.engine.impl.persistence.entity.SuspensionState",
      "org.camunda.bpm.engine.impl.context.Context",
      "org.camunda.bpm.engine.ProcessEngineException",
      "org.openecomp.mso.bpmn.core.BadInjectedFieldException",
      "org.camunda.bpm.engine.impl.pvm.runtime.ExecutionImpl",
      "org.openecomp.mso.bpmn.core.MissingInjectedFieldException",
      "net.sf.saxon.java.JavaPlatform",
      "net.sf.saxon.Configuration",
      "net.sf.saxon.tree.linked.NodeImpl",
      "net.sf.saxon.style.StyleElement",
      "net.sf.saxon.style.LiteralResultElement",
      "net.sf.saxon.style.AbsentExtensionElement",
      "org.camunda.bpm.engine.impl.core.variable.VariableMapImpl",
      "net.sf.saxon.tree.iter.EmptyIterator",
      "net.sf.saxon.tree.iter.EmptyAxisIterator",
      "net.sf.saxon.style.XSLAnalyzeString",
      "net.sf.saxon.tree.util.Navigator",
      "net.sf.saxon.om.NamespaceBinding",
      "net.sf.saxon.type.AnySimpleType",
      "net.sf.saxon.pattern.NodeTest",
      "net.sf.saxon.pattern.AnyNodeTest",
      "net.sf.saxon.type.AnyItemType",
      "net.sf.saxon.type.Type",
      "net.sf.saxon.z.IntHashMap",
      "net.sf.saxon.type.AnyType",
      "net.sf.saxon.type.Untyped",
      "net.sf.saxon.type.ErrorType",
      "net.sf.saxon.type.BuiltInType",
      "net.sf.saxon.type.BuiltInAtomicType",
      "net.sf.saxon.value.BooleanValue"
    );
  }
}
