/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 11:28:11 GMT 2016
 */

package org.openecomp.mso.bpmn.core.json;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JsonUtilsESTest extends JsonUtilsESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = JsonUtils.updJsonValue((String) null, "#", "#");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = JsonUtils.getJsonValueForKey((JSONObject) null, "LPZc4`q5w]IQMS.^'3");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = JsonUtils.getJsonParamValue("", ":bnv,&jl3bK", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = JsonUtils.getJsonParamValue("", "", "tuw[9j$Sz");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = JsonUtils.getJsonValue((String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = JsonUtils.addJsonValue((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = JsonUtils.xml2json("", (Boolean) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = JsonUtils.xml2json((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = JsonUtils.updJsonValue("tV a^wGCAwX", "tV a^wGCAwX", "tV a^wGCAwX");
      assertEquals("tV a^wGCAwX", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = JsonUtils.updJsonValue("", "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      String string0 = JsonUtils.json2xml("", boolean0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = JsonUtils.getJsonValueForKey("java.io.StringWriter@0000000003", "#");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Iterator<String> iterator0 = JsonUtils.getJsonIterator((String) null);
      assertNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = JsonUtils.delJsonValue("java.io.StringWriter@0000000003", "java.io.StringWriter@0000000003");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = JsonUtils.delJsonValue("", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      String string0 = JsonUtils.xml2json("Y~N~%]", boolean0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = JsonUtils.delJsonValue((String) null, "/Y");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = JsonUtils.updJsonValue((String) null, (String) null, "/Y");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = JsonUtils.addJsonValue("java.io.StringWriter@0000000006", "/Y", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Boolean boolean0 = JsonUtils.jsonValueExists("getJsonValueForKey(): found value=", "/Y");
      String string0 = JsonUtils.xml2json("getJsonValueForKey(): found value=", boolean0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = JsonUtils.json2xml(")?Fx+Bu:)1&$EZEmzoV");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = JsonUtils.xml2json("java.io.StringWriter@0000000006");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Iterator<String> iterator0 = JsonUtils.getJsonIterator("{+%2:*}4");
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JsonUtils jsonUtils0 = new JsonUtils();
  }
}
