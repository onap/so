/*-
 * ============LICENSE_START=======================================================
 * OPENECOMP - MSO
 * ================================================================================
 * Copyright (C) 2017 AT&T Intellectual Property. All rights reserved.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 */

package com.att.domain2.workflow.vnf.async.adapter.callback.wsdl.v1;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "vnfAdapterNotify", targetNamespace = "http://com.att.mso/vnfNotify")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface VnfAdapterNotify {


    /**
     * 
     * @param errorMessage
     * @param exception
     * @param messageId
     * @param completed
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "rollbackVnfNotification", targetNamespace = "http://com.att.mso/vnfNotify", className = "org.openecomp.mso.adapters.vnf.async.client.RollbackVnfNotification")
    @Action(input = "http://com.att.mso/notify/adapterNotify/rollbackVnfNotificationRequest")
    public void rollbackVnfNotification(
        @WebParam(name = "messageId", targetNamespace = "")
        String messageId,
        @WebParam(name = "completed", targetNamespace = "")
        boolean completed,
        @WebParam(name = "exception", targetNamespace = "")
        MsoExceptionCategory exception,
        @WebParam(name = "errorMessage", targetNamespace = "")
        String errorMessage);

    /**
     * 
     * @param errorMessage
     * @param vnfExists
     * @param status
     * @param exception
     * @param outputs
     * @param messageId
     * @param vnfId
     * @param completed
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "queryVnfNotification", targetNamespace = "http://com.att.mso/vnfNotify", className = "org.openecomp.mso.adapters.vnf.async.client.QueryVnfNotification")
    @Action(input = "http://com.att.mso/notify/adapterNotify/queryVnfNotificationRequest")
    public void queryVnfNotification(
        @WebParam(name = "messageId", targetNamespace = "")
        String messageId,
        @WebParam(name = "completed", targetNamespace = "")
        boolean completed,
        @WebParam(name = "exception", targetNamespace = "")
        MsoExceptionCategory exception,
        @WebParam(name = "errorMessage", targetNamespace = "")
        String errorMessage,
        @WebParam(name = "vnfExists", targetNamespace = "")
        Boolean vnfExists,
        @WebParam(name = "vnfId", targetNamespace = "")
        String vnfId,
        @WebParam(name = "status", targetNamespace = "")
        VnfStatus status,
        @WebParam(name = "outputs", targetNamespace = "")
        com.att.domain2.workflow.vnf.async.adapter.callback.wsdl.v1.QueryVnfNotification.Outputs outputs);

    /**
     * 
     * @param errorMessage
     * @param exception
     * @param rollback
     * @param outputs
     * @param messageId
     * @param vnfId
     * @param completed
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createVnfNotification", targetNamespace = "http://com.att.mso/vnfNotify", className = "org.openecomp.mso.adapters.vnf.async.client.CreateVnfNotification")
    @Action(input = "http://com.att.mso/notify/adapterNotify/createVnfNotificationRequest")
    public void createVnfNotification(
        @WebParam(name = "messageId", targetNamespace = "")
        String messageId,
        @WebParam(name = "completed", targetNamespace = "")
        boolean completed,
        @WebParam(name = "exception", targetNamespace = "")
        MsoExceptionCategory exception,
        @WebParam(name = "errorMessage", targetNamespace = "")
        String errorMessage,
        @WebParam(name = "vnfId", targetNamespace = "")
        String vnfId,
        @WebParam(name = "outputs", targetNamespace = "")
        com.att.domain2.workflow.vnf.async.adapter.callback.wsdl.v1.CreateVnfNotification.Outputs outputs,
        @WebParam(name = "rollback", targetNamespace = "")
        VnfRollback rollback);

    /**
     * 
     * @param errorMessage
     * @param exception
     * @param rollback
     * @param outputs
     * @param messageId
     * @param completed
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateVnfNotification", targetNamespace = "http://com.att.mso/vnfNotify", className = "org.openecomp.mso.adapters.vnf.async.client.UpdateVnfNotification")
    @Action(input = "http://com.att.mso/notify/adapterNotify/updateVnfNotificationRequest")
    public void updateVnfNotification(
        @WebParam(name = "messageId", targetNamespace = "")
        String messageId,
        @WebParam(name = "completed", targetNamespace = "")
        boolean completed,
        @WebParam(name = "exception", targetNamespace = "")
        MsoExceptionCategory exception,
        @WebParam(name = "errorMessage", targetNamespace = "")
        String errorMessage,
        @WebParam(name = "outputs", targetNamespace = "")
        com.att.domain2.workflow.vnf.async.adapter.callback.wsdl.v1.UpdateVnfNotification.Outputs outputs,
        @WebParam(name = "rollback", targetNamespace = "")
        VnfRollback rollback);

    /**
     * 
     * @param errorMessage
     * @param exception
     * @param messageId
     * @param completed
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteVnfNotification", targetNamespace = "http://com.att.mso/vnfNotify", className = "org.openecomp.mso.adapters.vnf.async.client.DeleteVnfNotification")
    @Action(input = "http://com.att.mso/notify/adapterNotify/deleteVnfNotificationRequest")
    public void deleteVnfNotification(
        @WebParam(name = "messageId", targetNamespace = "")
        String messageId,
        @WebParam(name = "completed", targetNamespace = "")
        boolean completed,
        @WebParam(name = "exception", targetNamespace = "")
        MsoExceptionCategory exception,
        @WebParam(name = "errorMessage", targetNamespace = "")
        String errorMessage);

}
