/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:02:57 GMT 2016
 */

package org.openecomp.mso.utils;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.PrivateAccess;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class CheckResultsESTest extends CheckResultsESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckResults checkResults0 = new CheckResults();
      checkResults0.addHostCheckResult("GP<QUZyf\"vf-sD", (-1), "");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckResults checkResults0 = new CheckResults();
      PrivateAccess.setVariable((Class<CheckResults>) CheckResults.class, checkResults0, "results", (Object) null);
      List<CheckResults.CheckResult> list0 = checkResults0.getResults();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      checkResults_CheckResult0.setOutput("xp");
      assertEquals(0, checkResults_CheckResult0.getState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      checkResults_CheckResult0.setType("2");
      assertEquals(0, checkResults_CheckResult0.getState());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      checkResults_CheckResult0.setState(1);
      assertEquals(1, checkResults_CheckResult0.getState());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      checkResults_CheckResult0.setServicename("9~");
      assertEquals(0, checkResults_CheckResult0.getState());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      checkResults_CheckResult0.setHostname((String) null);
      assertNull(checkResults_CheckResult0.getServicename());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckResults checkResults0 = new CheckResults();
      checkResults0.addHostCheckResult("GP<QUZyf\"vf-sD", 0, "GP<QUZyf\"vf-sD");
      List<CheckResults.CheckResult> list0 = checkResults0.getResults();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckResults checkResults0 = new CheckResults();
      List<CheckResults.CheckResult> list0 = checkResults0.getResults();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      String string0 = checkResults_CheckResult0.getServicename();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      int int0 = checkResults_CheckResult0.getState();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      String string0 = checkResults_CheckResult0.getHostname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      String string0 = checkResults_CheckResult0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckResults checkResults0 = new CheckResults();
      checkResults0.addServiceCheckResult("", "Ifp73+/", 0, " ");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckResults.CheckResult checkResults_CheckResult0 = new CheckResults.CheckResult();
      String string0 = checkResults_CheckResult0.getOutput();
      assertNull(string0);
  }
}
