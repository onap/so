/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:02:03 GMT 2016
 */

package org.openecomp.mso.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;

import org.openecomp.mso.logger.MsoLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.PrivateAccess;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class UUIDCheckerESTest extends UUIDCheckerESTestscaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MsoLogger msoLogger0 = mock(MsoLogger.class, new ViolatedAssumptionAnswer());
      String string0 = UUIDChecker.generateServiceInstanceID(msoLogger0);
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UUIDChecker uUIDChecker0 = (UUIDChecker)PrivateAccess.callDefaultConstructorOfTheClassUnderTest();
      assertNotNull(uUIDChecker0);
  }
}
