# will be used as entry in DB to say SITE OFF/ON for healthcheck

server:  
  port: 8080
  tomcat:
    max-threads: 50
  

mso:
  health:
    endpoints:
      catalogdb: http://localhost:${wiremock.server.port}
      requestdb: http://localhost:${wiremock.server.port}
      sdnc: http://localhost:${wiremock.server.port}
      openstack: http://localhost:${wiremock.server.port}
      bpmn: http://localhost:${wiremock.server.port}
      asdc: http://localhost:${wiremock.server.port}
      requestdbattsvc: http://localhost:${wiremock.server.port}
      
  infra-requests:
    archived:
      period: 180
  adapters:
    requestDb:
      endpoint:  http://localhost:${wiremock.server.port}
      auth: Basic YnBlbDptc28tZGItMTUwNyE=
  logPath: logs
  site-name: mtanj
  catalog:
    db:
      spring:
        endpoint: http://localhost:${wiremock.server.port}
  db:
    auth: Basic YnBlbDptc28tZGItMTUwNyE=
  config: 
    path: /src/main/resources/
  infra:
    default:
      alacarte:
        orchestrationUri: /mso/async/services/ALaCarteOrchestrator
        recipeTimeout: 180
        testApi: GR_API
    service:
      macro:
        default:
          testApi: GR_API
      versions:
        apiMinorVersion: 0
        apiPatchVersion: 0
  camundaURL: http://localhost:${wiremock.server.port}/
  camundaAuth: E8E19DD16CC90D2E458E8FF9A884CC0452F8F3EB8E321F96038DE38D5C1B0B02DFAE00B88E2CF6E2A4101AB2C011FC161212EE
  async:
    core-pool-size: 50
    max-pool-size: 50
    queue-capacity: 500
  sdc:
    client:
      auth: 97FF88AB352DA16E00DDD81E3876431DEF8744465DACA489EB3B3BE1F10F63EDA1715E626D0A4827A3E19CD88421BF
    activate:
      instanceid: test
      userid: cs0008
    endpoint: http://localhost:${wiremock.server.port}
  msoKey: 07a7159d3bf51a0e53be7a8f89699be7
  tenant:
    isolation:
      retry:
        count: 3
  aai:
    endpoint: http://localhost:${wiremock.server.port}
    auth: 5E12ACACBD552A415E081E29F2C4772F9835792A51C766CCFDD7433DB5220B59969CB2798C
  grm:
    endpoint: http://localhost:${wiremock.server.port}
    auth: 6AAD26000E278148A0B987436D9696A5B2D99BBF0DC545F9E64D6DF05298FFA987A6CF565F6F274EBC085678
  so:
    operational-environment:
      dmaap:
        username: testuser
        password: VjR5NDcxSzA=
        host: http://localhost:${wiremock.server.port}
        auth: B3705D6C2D521257CC2422ACCF03B001811ACC49F564DDB3A2CF2A1378B6D35A23CDCB696F2E1EDFBE6758DFE7C74B94F4A7DF84A0E2BB904935AC4D900D5597DF981ADE6CE1FF3AF993BED0
      publisher:
        topic: test.operationalEnvironmentEvent
  

spring:
  datasource:
    jdbcUrl: jdbc:mariadb://localhost:3307/catalogdb
    username: root
    password: password
    driver-class-name: org.mariadb.jdbc.Driver    
    initialization-mode: always
  jpa:   
    generate-ddl: false
    show-sql: false
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      enable-lazy-load-no-trans: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  jersey:
    type: filter
  security:
    usercredentials:
    -  
      username: test
      password: '$2a$12$Zi3AuYcZoZO/gBQyUtST2.F5N6HqcTtaNci2Et.ufsQhski56srIu'
      role: InfraPortal-Client
request:
  datasource:
    jdbcUrl: jdbc:mariadb://localhost:3307/requestdb
    username: root
    password: password
    driver-class-name: org.mariadb.jdbc.Driver
    
mariaDB4j:
  dataDir: 
  port: 3307
  databaseName: catalogdb
  databaseName2: requestdb


org:
  onap:
    so:
      adapters:
        network:
          encryptionKey: aa3871669d893c7fb8abbcda31b88b4f
