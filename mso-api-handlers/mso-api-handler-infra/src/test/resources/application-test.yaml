# will be used as entry in DB to say SITE OFF/ON for healthcheck

server:
    port: 8080
    tomcat:
        max-threads: 50
ssl-enable: false

apih-healthcheck-urn: /ecomp/mso/healthcheck,/ecomp/mso/homing/healthcheck,/ecomp/mso/infra/healthcheck,/asdc/healthcheck,/dbadapters/healthcheck,/ecomp/mso/catalog/v2/healthcheck
jra-healthcheck-urn: /networks/rest/healthcheck,/adapters/rest/healthcheck,/vnfs/rest/healthcheck,/tenants/rest/healthcheck,/appc/rest/healthcheck,/workflows/messages/healthcheck
camunda-healthcheck-urn: /mso/healthcheck

apih-nodehealthcheck-urn: /ecomp/mso/infra/nodehealthcheck
jra-nodehealthcheck-urn: /adapters/rest/nodehealthcheck
camunda-nodehealthcheck-urn: /mso/nodehealthcheck



mso:
  infra-requests:
    archived:
      period: 180
  adapters:
    requestDb:
      endpoint:  http://localhost:${wiremock.server.port}
      auth: Basic YnBlbDptc28tZGItMTUwNyE=
  logPath: logs
  site-name: mtanj
  catalog:
    db:
      spring:
        endpoint: "http://localhost:"
  db:
    auth: Basic YnBlbDptc28tZGItMTUwNyE=
  config: 
    path: /src/main/resources/
  infra:
    default:
      alacarte:
        orchestrationUri: /mso/async/services/ALaCarteOrchestrator
        recipeTimeout: 180
        testApi: GR_API
    service:
      macro:
        default:
          testApi: GR_API
      versions:
        apiMinorVersion: 0
        apiPatchVersion: 0
  camundaURL: http://localhost:${wiremock.server.port}/
  camundaAuth: F8E9452B55DDE4CCE77547B0E748105C54CF5EF1351B4E2CBAABF2981EFE776D
  async:
    core-pool-size: 50
    max-pool-size: 50
    queue-capacity: 500
  sdc:
    client:
      auth: F3473596C526938329DF877495B494DC374D1C4198ED3AD305EA3ADCBBDA1862
    activate:
      instanceid: test
      userid: cs0008
    endpoint: http://localhost:${wiremock.server.port}
  msoKey: 07a7159d3bf51a0e53be7a8f89699be7
  tenant:
    isolation:
      retry:
        count: 3
  aai:
    endpoint: http://localhost:${wiremock.server.port}
    auth: 26AFB797A6A57960D5D718491925C50F77CDC22AC394B3DBA09950D8FD1C0764
  grm:
    endpoint: http://localhost:${wiremock.server.port}
    username: gmruser
    password: test
  so:
    operational-environment:
      dmaap:
        username: testuser
        password: VjR5NDcxSzA=
        host: http://localhost:${wiremock.server.port}
      publisher:
        topic: test.operationalEnvironmentEvent
  

spring:
  datasource:
    url: jdbc:mariadb://localhost:3307/catalogdb
    username: root
    password: password
    driver-class-name: org.mariadb.jdbc.Driver    
    initialize: true
    initialization-mode: never
  jpa:   
    generate-ddl: false
    show-sql: false
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      enable-lazy-load-no-trans: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  jersey:
    type: filter
  security:
    usercredentials:
    -  
      username: test
      password: '$2a$12$Zi3AuYcZoZO/gBQyUtST2.F5N6HqcTtaNci2Et.ufsQhski56srIu'
      role: InfraPortal-Client
request:
  datasource:
    url: jdbc:mariadb://localhost:3307/requestdb
    username: root
    password: password
    driver-class-name: org.mariadb.jdbc.Driver
    intialize: false 
    
mariaDB4j:
  dataDir: 
  port: 3307
  databaseName: catalogdb
  databaseName2: requestdb
#Actuator
management: 
  context-path: /manage
  endpoints:
    enabled-by-default: false
  endpoint:
    info:
      enabled: true
    health:
      enabled: true