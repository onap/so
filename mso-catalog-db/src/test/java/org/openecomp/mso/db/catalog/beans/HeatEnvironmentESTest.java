/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:13:39 GMT 2016
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;

import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class HeatEnvironmentESTest extends HeatEnvironmentESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setName("");
      String string0 = heatEnvironment0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setId(4618);
      int int0 = heatEnvironment0.getId();
      assertEquals(4618, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setId((-2248));
      int int0 = heatEnvironment0.getId();
      assertEquals((-2248), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setEnvironment("=?");
      String string0 = heatEnvironment0.getEnvironment();
      assertEquals("=?", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setEnvironment("");
      String string0 = heatEnvironment0.getEnvironment();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setDescription("&G");
      String string0 = heatEnvironment0.getDescription();
      assertEquals("&G", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setDescription("");
      String string0 = heatEnvironment0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      Timestamp timestamp0 = new Timestamp((long) 0);
      heatEnvironment0.setCreated(timestamp0);
      Timestamp timestamp1 = heatEnvironment0.getCreated();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcUuid("L5UX?<T)6#pS4l");
      String string0 = heatEnvironment0.getAsdcUuid();
      assertEquals("L5UX?<T)6#pS4l", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcUuid("");
      String string0 = heatEnvironment0.getAsdcUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcResourceName("?zKdIbs8Xk_.4!");
      String string0 = heatEnvironment0.getAsdcResourceName();
      assertEquals("?zKdIbs8Xk_.4!", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcResourceName("");
      String string0 = heatEnvironment0.getAsdcResourceName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcLabel(".");
      String string0 = heatEnvironment0.getAsdcLabel();
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcLabel("");
      String string0 = heatEnvironment0.getAsdcLabel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      Timestamp timestamp0 = new Timestamp((long) 0);
      heatEnvironment0.setCreated(timestamp0);
      String string0 = heatEnvironment0.toString();
      assertEquals("ID=0, name=null, version=null, description=null, environment=null, asdcUuid=null, asdcResourceName=null,created=1/1/70 12:00 AM", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcResourceName("?zKdIbs8Xk_.4!");
      String string0 = heatEnvironment0.toString();
      assertEquals("ID=0, name=null, version=null, description=null, environment=null, asdcUuid=null, asdcResourceName=?zKdIbs8Xk_.4!", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setAsdcUuid("");
      String string0 = heatEnvironment0.toString();
      assertEquals("ID=0, name=null, version=null, description=null, environment=null, asdcUuid=, asdcResourceName=null", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setDescription("?zKdIbs8Xk_.4!");
      String string0 = heatEnvironment0.toString();
      assertEquals("ID=0, name=null, version=null, description=?zKdIbs8Xk_.4!, environment=null, asdcUuid=null, asdcResourceName=null", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setName("}");
      String string0 = heatEnvironment0.getName();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      String string0 = heatEnvironment0.getAsdcUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      String string0 = heatEnvironment0.getEnvironment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      int int0 = heatEnvironment0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      Timestamp timestamp0 = new Timestamp(356L);
      heatEnvironment0.setCreated(timestamp0);
      Timestamp timestamp1 = heatEnvironment0.getCreated();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      String string0 = heatEnvironment0.getAsdcResourceName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      String string0 = heatEnvironment0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      heatEnvironment0.setEnvironment("");
      String string0 = heatEnvironment0.toString();
      assertEquals("ID=0, name=null, version=null, description=null, environment=, asdcUuid=null, asdcResourceName=null", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      Timestamp timestamp0 = heatEnvironment0.getCreated();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      String string0 = heatEnvironment0.getAsdcLabel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HeatEnvironment heatEnvironment0 = new HeatEnvironment();
      String string0 = heatEnvironment0.getDescription();
      assertNull(string0);
  }
}
