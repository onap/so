/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:12:27 GMT 2016
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class HeatTemplateESTest extends HeatTemplateESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTimeoutMinutes(313);
      int int0 = heatTemplate0.getTimeoutMinutes();
      assertEquals(313, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTimeoutMinutes((-1781));
      int int0 = heatTemplate0.getTimeoutMinutes();
      assertEquals((-1781), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplatePath("9PO'c]OQ>6N |");
      String string0 = heatTemplate0.getTemplatePath();
      assertEquals("9PO'c]OQ>6N |", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateName("Template=null,version=null,path=null,body=(Not defined),timeout=0,asdcUuid=null,asdcResourceName=null,description=null");
      String string0 = heatTemplate0.getTemplateName();
      assertEquals("Template=null,version=null,path=null,body=(Not defined),timeout=0,asdcUuid=null,asdcResourceName=null,description=null", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateName("");
      String string0 = heatTemplate0.getTemplateName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateBody("ParentTemplateId=");
      String string0 = heatTemplate0.getTemplateBody();
      assertEquals("ParentTemplateId=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateBody("");
      String string0 = heatTemplate0.getTemplateBody();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatTemplateParam> linkedHashSet0 = new LinkedHashSet<HeatTemplateParam>();
      heatTemplate0.setParameters(linkedHashSet0);
      Set<HeatTemplateParam> set0 = heatTemplate0.getParameters();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatTemplateParam> linkedHashSet0 = new LinkedHashSet<HeatTemplateParam>();
      HeatTemplateParam heatTemplateParam0 = new HeatTemplateParam();
      linkedHashSet0.add(heatTemplateParam0);
      heatTemplate0.setParameters(linkedHashSet0);
      Set<HeatTemplateParam> set0 = heatTemplate0.getParameters();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setId(118);
      int int0 = heatTemplate0.getId();
      assertEquals(118, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setId((-340));
      int int0 = heatTemplate0.getId();
      assertEquals((-340), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatNestedTemplate> linkedHashSet0 = new LinkedHashSet<HeatNestedTemplate>();
      HeatNestedTemplate heatNestedTemplate0 = new HeatNestedTemplate();
      linkedHashSet0.add(heatNestedTemplate0);
      heatTemplate0.setFiles(linkedHashSet0);
      Set<HeatNestedTemplate> set0 = heatTemplate0.getFiles();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setDescription("PARENT_COMPLETE");
      String string0 = heatTemplate0.getDescription();
      assertEquals("PARENT_COMPLETE", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setDescription("");
      String string0 = heatTemplate0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Timestamp timestamp0 = Timestamp.valueOf(localDateTime0);
      heatTemplate0.setCreated(timestamp0);
      Timestamp timestamp1 = heatTemplate0.getCreated();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setAsdcUuid("msg");
      String string0 = heatTemplate0.getAsdcUuid();
      assertEquals("msg", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setAsdcResourceName("!IMW$RE2UtEWIEeJc5");
      String string0 = heatTemplate0.getAsdcResourceName();
      assertEquals("!IMW$RE2UtEWIEeJc5", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setAsdcLabel("<JH|c2");
      String string0 = heatTemplate0.getAsdcLabel();
      assertEquals("<JH|c2", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setAsdcLabel("");
      String string0 = heatTemplate0.getAsdcLabel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatTemplateParam> linkedHashSet0 = new LinkedHashSet<HeatTemplateParam>();
      linkedHashSet0.add((HeatTemplateParam) null);
      heatTemplate0.setParameters(linkedHashSet0);
      // Undeclared exception!
      try { 
        heatTemplate0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.openecomp.mso.db.catalog.beans.HeatTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatTemplateParam> linkedHashSet0 = new LinkedHashSet<HeatTemplateParam>();
      HeatTemplateParam heatTemplateParam0 = new HeatTemplateParam();
      heatTemplateParam0.setRequired(true);
      linkedHashSet0.add(heatTemplateParam0);
      heatTemplate0.setParameters(linkedHashSet0);
      String string0 = heatTemplate0.toString();
      assertEquals("Template=null,version=null,path=null,body=(Not defined),timeout=0,asdcUuid=null,asdcResourceName=null,description=null,params=[null(reqd)]", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatTemplateParam> linkedHashSet0 = new LinkedHashSet<HeatTemplateParam>();
      HeatTemplateParam heatTemplateParam0 = new HeatTemplateParam();
      linkedHashSet0.add(heatTemplateParam0);
      heatTemplate0.setParameters(linkedHashSet0);
      String string0 = heatTemplate0.toString();
      assertEquals("Template=null,version=null,path=null,body=(Not defined),timeout=0,asdcUuid=null,asdcResourceName=null,description=null,params=[null]", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Timestamp timestamp0 = Timestamp.valueOf(localDateTime0);
      heatTemplate0.setCreated(timestamp0);
      String string0 = heatTemplate0.toString();
      assertEquals("Template=null,version=null,path=null,body=(Not defined),timeout=0,asdcUuid=null,asdcResourceName=null,description=null,created=2/14/14 8:21 PM", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateBody("]");
      String string0 = heatTemplate0.toString();
      assertEquals("Template=null,version=null,path=null,body=(1 chars),timeout=0,asdcUuid=null,asdcResourceName=null,description=null", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateBody("]");
      String string0 = heatTemplate0.getHeatTemplate();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getAsdcLabel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getTemplatePath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      Set<HeatNestedTemplate> set0 = heatTemplate0.getFiles();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplateBody("");
      String string0 = heatTemplate0.getHeatTemplate();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      Timestamp timestamp0 = heatTemplate0.getCreated();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      Set<HeatTemplateParam> set0 = heatTemplate0.getParameters();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setAsdcResourceName("");
      String string0 = heatTemplate0.getAsdcResourceName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getAsdcUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatNestedTemplate> linkedHashSet0 = new LinkedHashSet<HeatNestedTemplate>();
      heatTemplate0.setFiles(linkedHashSet0);
      Set<HeatNestedTemplate> set0 = heatTemplate0.getFiles();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      LinkedHashSet<HeatTemplateParam> linkedHashSet0 = new LinkedHashSet<HeatTemplateParam>();
      heatTemplate0.setParameters(linkedHashSet0);
      String string0 = heatTemplate0.toString();
      assertEquals("Template=null,version=null,path=null,body=(Not defined),timeout=0,asdcUuid=null,asdcResourceName=null,description=null", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setTemplatePath("");
      String string0 = heatTemplate0.getTemplatePath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      Timestamp timestamp0 = new Timestamp(0L);
      heatTemplate0.setCreated(timestamp0);
      Timestamp timestamp1 = heatTemplate0.getCreated();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getAsdcResourceName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      int int0 = heatTemplate0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getTemplateName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      String string0 = heatTemplate0.getTemplateBody();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      int int0 = heatTemplate0.getTimeoutMinutes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HeatTemplate heatTemplate0 = new HeatTemplate();
      heatTemplate0.setAsdcUuid("");
      String string0 = heatTemplate0.getAsdcUuid();
      assertEquals("", string0);
  }
}
