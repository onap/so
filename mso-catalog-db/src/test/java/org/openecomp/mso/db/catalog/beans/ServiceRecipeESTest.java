/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:20:36 GMT 2016
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;

import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class ServiceRecipeESTest extends ServiceRecipeESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      Integer integer0 = new Integer(0);
      serviceRecipe0.setServiceTimeoutInterim(integer0);
      Integer integer1 = serviceRecipe0.getServiceTimeoutInterim();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      Integer integer0 = new Integer(536);
      serviceRecipe0.setServiceTimeoutInterim(integer0);
      Integer integer1 = serviceRecipe0.getServiceTimeoutInterim();
      assertEquals(536, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      Integer integer0 = new Integer((-1032));
      serviceRecipe0.setServiceTimeoutInterim(integer0);
      Integer integer1 = serviceRecipe0.getServiceTimeoutInterim();
      assertEquals((-1032), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setServiceParamXSD("*9+?bc]Ov");
      String string0 = serviceRecipe0.getServiceParamXSD();
      assertEquals("*9+?bc]Ov", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setServiceId(1643);
      int int0 = serviceRecipe0.getServiceId();
      assertEquals(1643, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setServiceId((-1639));
      int int0 = serviceRecipe0.getServiceId();
      assertEquals((-1639), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setRecipeTimeout(536);
      int int0 = serviceRecipe0.getRecipeTimeout();
      assertEquals(536, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setRecipeTimeout((-1));
      int int0 = serviceRecipe0.getRecipeTimeout();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setOrchestrationUri("R~N]`p<1UHw6JYz");
      String string0 = serviceRecipe0.getOrchestrationUri();
      assertEquals("R~N]`p<1UHw6JYz", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setId(1);
      int int0 = serviceRecipe0.getId();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setDescription("wLV^;f35^#");
      String string0 = serviceRecipe0.getDescription();
      assertEquals("wLV^;f35^#", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setAction("@T7x,XN.)]mDZ");
      String string0 = serviceRecipe0.getAction();
      assertEquals("@T7x,XN.)]mDZ", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setAction("");
      String string0 = serviceRecipe0.getAction();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      Timestamp timestamp0 = mock(Timestamp.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(timestamp0).getTime();
      serviceRecipe0.setCreated(timestamp0);
      String string0 = serviceRecipe0.toString();
      assertEquals("RECIPE: null,uri=null,created=1/1/70 12:00 AM", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      String string0 = serviceRecipe0.toString();
      assertEquals("RECIPE: null,uri=null", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      String string0 = serviceRecipe0.getOrchestrationUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      String string0 = serviceRecipe0.getAction();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      Timestamp timestamp0 = serviceRecipe0.getCreated();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      String string0 = serviceRecipe0.getServiceParamXSD();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setId((-642));
      int int0 = serviceRecipe0.getId();
      assertEquals((-642), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setDescription("");
      String string0 = serviceRecipe0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      String string0 = serviceRecipe0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      int int0 = serviceRecipe0.getServiceId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      Integer integer0 = serviceRecipe0.getServiceTimeoutInterim();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      int int0 = serviceRecipe0.getRecipeTimeout();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setOrchestrationUri("");
      String string0 = serviceRecipe0.getOrchestrationUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      int int0 = serviceRecipe0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ServiceRecipe serviceRecipe0 = new ServiceRecipe();
      serviceRecipe0.setServiceParamXSD("");
      String string0 = serviceRecipe0.getServiceParamXSD();
      assertEquals("", string0);
  }
}
