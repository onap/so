/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 08:14:48 GMT 2016
 */

package org.openecomp.mso.db.catalog.beans;

import org.junit.Test;
import static org.junit.Assert.*;

import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class VnfComponentESTest extends VnfComponentESTestscaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.setVnfId(2405);
      VnfComponent vnfComponent1 = new VnfComponent();
      boolean boolean0 = vnfComponent0.equals(vnfComponent1);
      assertEquals(2405, vnfComponent0.getVnfId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      boolean boolean0 = vnfComponent0.equals(vnfComponent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.setVnfId(1343);
      int int0 = vnfComponent0.getVnfId();
      assertEquals(1343, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.setVnfId((-1));
      int int0 = vnfComponent0.getVnfId();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer(0);
      vnfComponent0.setHeatTemplateId(integer0);
      Integer integer1 = vnfComponent0.getHeatTemplateId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer((-1));
      vnfComponent0.setHeatTemplateId(integer0);
      Integer integer1 = vnfComponent0.getHeatTemplateId();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer(0);
      vnfComponent0.setHeatEnvironmentId(integer0);
      Integer integer1 = vnfComponent0.getHeatEnvironmentId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer(1);
      vnfComponent0.setHeatEnvironmentId(integer0);
      Integer integer1 = vnfComponent0.getHeatEnvironmentId();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer((-1));
      vnfComponent0.setHeatEnvironmentId(integer0);
      Integer integer1 = vnfComponent0.getHeatEnvironmentId();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Timestamp timestamp0 = new Timestamp(0L);
      vnfComponent0.setCreated(timestamp0);
      Timestamp timestamp1 = vnfComponent0.getCreated();
      assertEquals(0, timestamp1.getNanos());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Timestamp timestamp0 = new Timestamp((-1098L));
      vnfComponent0.setCreated(timestamp0);
      Timestamp timestamp1 = vnfComponent0.getCreated();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.setComponentType("BiXPVXS}ta?x9wcq");
      String string0 = vnfComponent0.getComponentType();
      assertEquals("BiXPVXS}ta?x9wcq", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.setComponentType("");
      String string0 = vnfComponent0.getComponentType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      int int0 = vnfComponent0.getVnfId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      VnfComponent vnfComponent1 = new VnfComponent();
      vnfComponent0.setComponentType("");
      vnfComponent1.setComponentType("");
      boolean boolean0 = vnfComponent0.equals(vnfComponent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      VnfComponent vnfComponent1 = new VnfComponent();
      vnfComponent1.setComponentType("X\"p(eM");
      boolean boolean0 = vnfComponent0.equals(vnfComponent1);
      assertEquals(0, vnfComponent1.getVnfId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer((-1));
      boolean boolean0 = vnfComponent0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Timestamp timestamp0 = new Timestamp((-38L));
      vnfComponent0.setCreated(timestamp0);
      String string0 = vnfComponent0.toString();
      assertEquals("VnfComponent: vnfId=0,componentType=null,heatTemplateId=null,heatEnvironmentId=null,created=12/31/69 11:59 PM", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      String string0 = vnfComponent0.toString();
      assertEquals("VnfComponent: vnfId=0,componentType=null,heatTemplateId=null,heatEnvironmentId=null", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.setVnfId((-1));
      VnfComponent vnfComponent1 = new VnfComponent();
      boolean boolean0 = vnfComponent0.equals(vnfComponent1);
      assertEquals(-1, vnfComponent0.getVnfId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      vnfComponent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Timestamp timestamp0 = vnfComponent0.getCreated();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = vnfComponent0.getHeatEnvironmentId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      String string0 = vnfComponent0.getComponentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = vnfComponent0.getHeatTemplateId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      Integer integer0 = new Integer(1910);
      vnfComponent0.setHeatTemplateId(integer0);
      Integer integer1 = vnfComponent0.getHeatTemplateId();
      assertEquals(1910, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VnfComponent vnfComponent0 = new VnfComponent();
      VnfComponent vnfComponent1 = new VnfComponent();
      // Undeclared exception!
      try { 
        vnfComponent0.equals(vnfComponent1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
